<?xml version="1.0" encoding="Shift_JIS" ?>
<!-- なんちゃってXML version 0.1( ObjectEditor専用 ) -->
<xobject>
<ID>project</ID>
<x0>0</x0>
<y0>0</y0>
<width>200</width>
<height>100</height>
<ID_maker>14</ID_maker>
<objectname>create_os6_ramdisk</objectname>
<description>新規のアプリケーション</description>
<プロパティ>
<ID>properties</ID>
<LookandFeel>javax.swing.plaf.metal.MetalLookAndFeel</LookandFeel>
<MainWinx0>0</MainWinx0>
<MainWiny0>0</MainWiny0>
<MainWinWidth>1024</MainWinWidth>
<MainWinHeight>740</MainWinHeight>
<MesgWinx0>0</MesgWinx0>
<MesgWiny0>0</MesgWiny0>
<MesgWinWidth>1024</MesgWinWidth>
<MesgWinHeight>745</MesgWinHeight>
<FileWinx0>36</FileWinx0>
<FileWiny0>478</FileWiny0>
<FileWinWidth>578</FileWinWidth>
<FileWinHeight>262</FileWinHeight>
<EditWinx0>347</EditWinx0>
<EditWiny0>0</EditWiny0>
<EditWinWidth>676</EditWinWidth>
<EditWinHeight>541</EditWinHeight>
<PropWinx0>1</PropWinx0>
<PropWiny0>1</PropWiny0>
<PropWinWidth>615</PropWinWidth>
<PropWinHeight>448</PropWinHeight>
<DividerLocation1>2</DividerLocation1>
<DividerLocation2>2</DividerLocation2>
<ToolBarVisible>1</ToolBarVisible>
<ViewSourceAtCompile>0</ViewSourceAtCompile>
<NoSourceCreate>0</NoSourceCreate>
<JavaEditCommand>geany</JavaEditCommand>
<JavaViewCommand></JavaViewCommand>
<HelpCommand>xdg-open ./help/manual.html</HelpCommand>
<ApplicationType>0</ApplicationType>
<CompileCommand0>./compile_java</CompileCommand0>
<RunCommand0>./run_java</RunCommand0>
<GUIDesignerCommand0>java -jar guidsin.jar -java</GUIDesignerCommand0>
<ImportFiles0> import java.awt.*;
 import java.awt.event.*;
 import javax.swing.*;
 import javax.swing.event.*;
 import javax.swing.tree.*;
 import java.io.*;
 import java.net.*;
 import java.util.*;
import java.awt.geom.*;
import java.awt.print.*;
import javax.swing.border.*;
import javax.swing.filechooser.*;
 import javax.swing.*;
 import javax.swing.event.*;
 import javax.swing.tree.*;
 import java.io.*;
 import java.net.*;
 import java.util.*;
import java.awt.image.BufferedImage;
import javax.sound.sampled.*;

class Starter{
  public static void main( String args[] ){
    %AppName% ap = new %AppName%();
    ap.ARGS = args;
    ap.Start();
  }
}
</ImportFiles0>
<ProgramStartupCode0> String[] ARGS;
</ProgramStartupCode0>
<NativeHelpCommand0></NativeHelpCommand0>
<CompileCommand1></CompileCommand1>
<RunCommand1></RunCommand1>
<GUIDesignerCommand1>java -jar guidsin.jar -applet</GUIDesignerCommand1>
<ImportFiles1> import java.awt.*;
 import java.awt.event.*;
 import java.applet.*;
 import javax.swing.*;
 import javax.swing.event.*;
 import javax.swing.tree.*;
 import java.io.*;
 import java.net.*;
 import java.util.*;
 public class javatext extends Applet {
   %AppName% ap;
   public void init() {
     ap = new %AppName%();
     ap.APPLET = this;
     ap.Start();
   }
 }
</ImportFiles1>
<ProgramStartupCode1> Applet APPLET;
</ProgramStartupCode1>
<NativeHelpCommand1></NativeHelpCommand1>
<CompileCommand2></CompileCommand2>
<RunCommand2></RunCommand2>
<GUIDesignerCommand2></GUIDesignerCommand2>
<ImportFiles2>#include &lt;stdio.h&gt;

void Startup();
</ImportFiles2>
<ProgramStartupCode2>int main(){
 Startup();
 %AppName%::Start();
 }
</ProgramStartupCode2>
<NativeHelpCommand2></NativeHelpCommand2>
<CompileCommand3></CompileCommand3>
<RunCommand3></RunCommand3>
<GUIDesignerCommand3>java -jar guidsin.jar -cpp</GUIDesignerCommand3>
<ImportFiles3>#include &lt;stdio.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;math.h&gt;
#include &quot;Ekagen.h&quot;
void Startup();
</ImportFiles3>
<ProgramStartupCode3>void Emain(){
Startup();
%AppName%::Start();
}
</ProgramStartupCode3>
<NativeHelpCommand3></NativeHelpCommand3>
<MoveStep>8</MoveStep>
<ImageEditCommand></ImageEditCommand>
<CompilerFileName>javac.exe</CompilerFileName>
<CompileCommand4>./compile_android Test com example test</CompileCommand4>
<RunCommand4>./run_android Test com example test</RunCommand4>
<GUIDesignerCommand4>java -jar guidsin.jar -android</GUIDesignerCommand4>
<ImportFiles4>package com.example.test;

import android.os.Bundle;
import android.app.Activity;
import android.view.View;
import android.graphics.Bitmap;
import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.Paint;
import android.graphics.Paint.Style;
import android.widget.Button;
import android.view.SurfaceHolder;
import android.view.SurfaceHolder.Callback;
import android.view.SurfaceView;
import android.widget.EditText;
import android.text.SpannableStringBuilder;
import android.text.TextWatcher;
import android.text.Editable;
import android.graphics.Matrix;
import android.graphics.Typeface;
import android.graphics.RectF;
import android.graphics.BitmapFactory;
import java.io.*;
 import java.net.*;
import java.util.*;
import java.text.SimpleDateFormat;
import android.media.MediaPlayer;
import android.os.Handler;
import android.content.res.Configuration;
import android.view.LayoutInflater;
import android.view.ViewGroup;
import android.app.Activity;
import android.graphics.Color;

import android.widget.AbsoluteLayout;
import android.widget.*;
import android.view.Gravity;
import android.view.View.OnClickListener;

import android.hardware.Camera;

public class HelloWorld extends Activity {
  public void onCreate(Bundle bundle) {
    super.onCreate(bundle);
    %AppName% ap = new %AppName%();
    ap.ACTIVITY = this;
    ap.Start();
  }
}
</ImportFiles4>
<ProgramStartupCode4>Activity ACTIVITY;
</ProgramStartupCode4>
<NativeHelpCommand4>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
&lt;manifest xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
    package=&quot;com.example.test&quot;
    android:versionCode=&quot;1&quot;
    android:versionName=&quot;1.0&quot; &gt;

    
    
  &lt;uses-permission android:name=&quot;android.permission.CAMERA&quot; /&gt; 
  &lt;uses-feature android:name=&quot;android.hardware.camera&quot; /&gt; 
  &lt;uses-feature android:name=&quot;android.hardware.usb.host&quot; /&gt; 
  &lt;uses-permission android:name=&quot;android.permission.RECORD_AUDIO&quot;/&gt;
  &lt;uses-permission android:name=&quot;android.permission.WRITE_EXTERNAL_STORAGE&quot; /&gt; 
  &lt;uses-permission android:name=&quot;android.permission.INTERNET&quot;/&gt;

  &lt;uses-sdk android:minSdkVersion=&quot;3&quot; android:targetSdkVersion=&quot;21&quot;/&gt;
  
 
    &lt;application android:label=&quot;@string/app_name&quot; &gt;
        &lt;activity
            android:name=&quot;HelloWorld&quot;
            android:label=&quot;@string/app_name&quot; &gt;
            &lt;intent-filter&gt;
                &lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt;

                &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt;
            &lt;/intent-filter&gt;
        &lt;/activity&gt;
    &lt;/application&gt;

&lt;/manifest&gt;
</NativeHelpCommand4>
<HtmlEditCommand></HtmlEditCommand>
<CompileCommand5></CompileCommand5>
<RunCommand5></RunCommand5>
<GUIDesignerCommand5></GUIDesignerCommand5>
<ImportFiles5></ImportFiles5>
<ProgramStartupCode5>gosub @_PSTART
end
</ProgramStartupCode5>
<NativeHelpCommand5></NativeHelpCommand5>
<NoOptimizePin>0</NoOptimizePin>
<CompileCommand6>./compile_c</CompileCommand6>
<RunCommand6>./run_c</RunCommand6>
<GUIDesignerCommand6></GUIDesignerCommand6>
<ImportFiles6>#include &lt;setjmp.h&gt;
#include &lt;pthread.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;stdarg.h&gt;
#include &lt;string.h&gt;
#include &lt;unistd.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;math.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;netinet/in.h&gt;
#include &lt;arpa/inet.h&gt;
#include &lt;netdb.h&gt;

#include &lt;X11/Xlib.h&gt;
#include &lt;X11/Xutil.h&gt;
#include &lt;X11/Xlocale.h&gt; /* ロケール用ヘッダーファイル */
#include &lt;X11/xpm.h&gt;
#include &lt;sys/time.h&gt;
#include &lt;signal.h&gt;
#include &lt;unistd.h&gt;
#include &lt;termios.h&gt;
#include &lt;errno.h&gt;
</ImportFiles6>
<ProgramStartupCode6>int ARGC; char** ARGV;
int main( int argc, char** argv ){
  ARGC=argc;
  ARGV=argv;
  _PSTART();
}
</ProgramStartupCode6>
<NativeHelpCommand6></NativeHelpCommand6>
<IDF_LocalVariable5>\</IDF_LocalVariable5>
<IDF_LocalVariable7>\</IDF_LocalVariable7>
<CompileCommand7></CompileCommand7>
<RunCommand7></RunCommand7>
<GUIDesignerCommand7></GUIDesignerCommand7>
<ImportFiles7></ImportFiles7>
<ProgramStartupCode7></ProgramStartupCode7>
<NativeHelpCommand7></NativeHelpCommand7>
</プロパティ>
<codeclip>
<ID>_CSTART</ID>
<x0>10</x0>
<y0>34</y0>
<width>80</width>
<height>24</height>
<codetext> String[] ARGS;
</codetext>
</codeclip>
<pin>
<ID>_PSTART</ID>
<x0>10</x0>
<y0>64</y0>
<width>55</width>
<height>24</height>
<text>Start()</text>
<px>50</px>
<py>50</py>
</pin>
<codeclip>
<ID>_C0</ID>
<x0>456</x0>
<y0>337</y0>
<width>249</width>
<height>232</height>
<codetext>int ramdisk_address = 0x10000;
int ramdisk[] = new int[0xff00];

String objfile[]={
  &quot;os6/obj/cat.obj&quot;,
  &quot;os6/obj/cp.obj&quot;,
  &quot;os6/obj/ed.obj&quot;,
  &quot;os6/obj/ls.obj&quot;,
  &quot;os6/obj/mv.obj&quot;,
  &quot;os6/obj/rm.obj&quot;,
  &quot;os6/obj/dump.obj&quot;,
  &quot;os6/obj/orc.obj&quot;,
  &quot;os6/obj/asm.obj&quot;
};
</codetext>
</codeclip>
<codeclip>
<ID>_C1</ID>
<x0>462</x0>
<y0>100</y0>
<width>358</width>
<height>36</height>
<codetext>// オブジェクトファイルをメモリにセット
public void write_comfile( String infile, String fname ){


set_int( sector*SECTOR_SIZE+NEXT_SECTOR, NONSEC );
set_int( sector*SECTOR_SIZE+NEXT_FILE_SECTOR, NONSEC );
if( prev_file_sector &gt;= 0 ) set_int( prev_file_sector*SECTOR_SIZE+NEXT_FILE_SECTOR, sector );
prev_file_sector = sector;
set_string( sector*SECTOR_SIZE+FILE_NAME, fname );
bufp = BUFP0;
try{
  BufferedReader din = new BufferedReader( new FileReader(infile) );
  String line;
  while(true){
    line=din.readLine();
    if( line==null ) break;
    line=din.readLine();
    if( line==null ) break;
    if( bufp &gt;= SECTOR_SIZE ){
      set_int( sector*SECTOR_SIZE+NEXT_SECTOR, sector+1 );
      sector++;
      set_int( sector*SECTOR_SIZE+NEXT_SECTOR, NONSEC );
      bufp = BUFP1;
    }
    ramdisk[ sector*SECTOR_SIZE+bufp ] = Integer.parseInt(line);
    bufp++;
  }
  din.close();
  sector++;
} catch(Exception e ){ e.printStackTrace();}

}
</codetext>
</codeclip>
<codeclip>
<ID>_C2</ID>
<x0>463</x0>
<y0>146</y0>
<width>300</width>
<height>37</height>
<codetext>// 整数をメモリにセット
public void set_int( int address, int data ){

  ramdisk[ address ]   = data &amp; 0x3f;
  ramdisk[ address+1 ] = (data&gt;&gt;6) &amp; 0x3f;
  ramdisk[ address+2 ] = (data&gt;&gt;12) &amp; 0x3f;
  
}
</codetext>
</codeclip>
<operation>
<ID>_O4</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>110</x0>
<y0>113</y0>
<width>297</width>
<height>48</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>248</outpinx0>
<outpiny0>27</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// オブジェクトファイルをメモリにセット


for( int i = 0; i &lt; objfile.length; i++ ){
  write_comfile( objfile[i], fname[i] );
}
</codetext>
</operation>
<relation>
<ID>_R5</ID>
<pin1name>_PSTART</pin1name>
<pin2name>_O4</pin2name>
</relation>
<codeclip>
<ID>_C6</ID>
<x0>462</x0>
<y0>195</y0>
<width>333</width>
<height>38</height>
<codetext>// 文字列をメモリにセット
public void set_string( int address, String data ){

  for( int i =0; i &lt; data.length(); i++ ){
    int c = (int)data.charAt(i);
    if( c &gt;= 32 &amp;&amp; c&lt;96 ) c -= 32;
    else if(( c &gt;= (int)&apos;a&apos; ) &amp;&amp; ( c &lt;= (int)&apos;z&apos; ) ) c += ( -(int)&apos;a&apos; + (int)&apos;A&apos; - 32 );
    else c = 63;
    ramdisk[ address+i ] = c;
  } 
  ramdisk[ address+data.length() ] = 63;
}
</codetext>
</codeclip>
<codeclip>
<ID>_C7</ID>
<x0>140</x0>
<y0>338</y0>
<width>299</width>
<height>221</height>
<codetext>String FILESYS_NAME = &quot;ramdisk.img&quot;;

int NEXT_SECTOR=0;
int NEXT_FILE_SECTOR =3;
int FILE_NAME = 6;
int BUFP0=26;
int BUFP1=3;
int SECTOR_SIZE = 256;
int NONSEC = -1;

int prev_file_sector= -1;
int prev_sector = -1;
int sector =0;
int bufp = 0;
</codetext>
</codeclip>
<codeclip>
<ID>_C8</ID>
<x0>152</x0>
<y0>7</y0>
<width>376</width>
<height>78</height>
<codetext>/*

 os6のRAMディスクファイルシステムを作成するプログラム

*/
</codetext>
</codeclip>
<codeclip>
<ID>_C9</ID>
<x0>732</x0>
<y0>352</y0>
<width>248</width>
<height>231</height>
<codetext>String fname[] = {
 &quot;CAT&quot;,
 &quot;CP&quot;,
 &quot;ED&quot;,
 &quot;LS&quot;,
 &quot;MV&quot;,
 &quot;RM&quot;,
 &quot;DUMP&quot;,
 &quot;ORC&quot;,
 &quot;ASM&quot;
};
</codetext>
</codeclip>
<operation>
<ID>_O10</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>114</x0>
<y0>173</y0>
<width>295</width>
<height>66</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>244</inpinx0>
<inpiny0>24</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>245</outpinx0>
<outpiny0>45</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// ヘッダファイルをメモリにセット







set_int( sector*SECTOR_SIZE+NEXT_SECTOR, NONSEC );
set_int( sector*SECTOR_SIZE+NEXT_FILE_SECTOR, NONSEC );
if( prev_file_sector &gt;= 0 ) set_int( prev_file_sector*SECTOR_SIZE+NEXT_FILE_SECTOR, sector );
prev_file_sector = sector;
set_string( sector*SECTOR_SIZE+FILE_NAME, &quot;OS6.RH&quot; );
bufp = BUFP0;
try{
  FileReader din = new FileReader(&quot;./include/os6.rh&quot;);
  int ch;
  while(true){
    ch = din.read();
    if( ch &lt; 0 ) break;
    if( bufp &gt;= SECTOR_SIZE ){
      set_int( sector*SECTOR_SIZE+NEXT_SECTOR, sector+1 );
      sector++;
      set_int( sector*SECTOR_SIZE+NEXT_SECTOR, NONSEC );
      bufp = BUFP1;
    }
    
int ch2=0;
    
    if( ch == 10 || ch == 13 ) ch2 = 61;           // 改行コード
    else if( ch &gt;=97 &amp;&amp; ch &lt;= 122 ) ch2 = ch -64;  // &apos;a&apos;~&apos;z&apos;は大文字に変換
    else if( ch &gt;=32 &amp;&amp; ch &lt;=91 ) ch2 = ch -32;    // &apos; &apos;~&apos;[&apos;
    else if( ch &gt;= 92 &amp;&amp; ch&lt;95 ) ch2 = 62;         // コントロールコード(リザーブ)
    else if( ch == 95 ) ch2 = 59;                  // &apos;_&apos;は&apos;[&apos;に変換
    else ch2 = 0;                                  // その他はスペースに変換

int ch3= ch2+32;
if( ch2 == 61 ) ch3 = 10;
//System.out.print( ch+ &quot;/&quot;+ch2+&quot;:&quot; +((char)ch)+((char)ch3)+&quot; &quot; );


    ramdisk[ sector*SECTOR_SIZE+bufp ] = ch2;
    bufp++;
  }
  ramdisk[ sector*SECTOR_SIZE+bufp ] = 63;
  din.close();
  sector++;
} catch(Exception e ){ e.printStackTrace();}


</codetext>
</operation>
<relation>
<ID>_R11</ID>
<pin1name>_O4</pin1name>
<pin2name>_O10</pin2name>
</relation>
<operation>
<ID>_O12</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>116</x0>
<y0>251</y0>
<width>300</width>
<height>49</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>250</inpinx0>
<inpiny0>28</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>248</outpinx0>
<outpiny0>27</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// メモリの内容をRAMディスクに書き込む


try{
  BufferedWriter dout = new BufferedWriter( new FileWriter(FILESYS_NAME));
  for( int i = 0;i&lt;ramdisk.length; i++ ){
    dout.write((ramdisk_address+i)+&quot;\n&quot;);
    dout.write(ramdisk[i]+&quot;\n&quot;);
  }
  dout.close();
} catch( Exception e ){e.printStackTrace();}
</codetext>
</operation>
<relation>
<ID>_R13</ID>
<pin1name>_O10</pin1name>
<pin2name>_O12</pin2name>
</relation>
</xobject>
