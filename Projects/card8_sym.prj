<?xml version="1.0" encoding="Shift_JIS" ?>
<!-- なんちゃってXML version 0.1( ObjectEditor専用 ) -->
<xobject>
<ID>project</ID>
<x0>0</x0>
<y0>0</y0>
<width>200</width>
<height>100</height>
<ID_maker>110</ID_maker>
<objectname>card8_sym</objectname>
<description>新規のアプリケーション</description>
<codeclip>
<ID>_CSTART</ID>
<x0>7</x0>
<y0>264</y0>
<width>80</width>
<height>24</height>
<codetext> String[] ARGS;
</codetext>
</codeclip>
<pin>
<ID>_PSTART</ID>
<x0>15</x0>
<y0>16</y0>
<width>55</width>
<height>24</height>
<text>Start()</text>
<px>50</px>
<py>50</py>
</pin>
<operation>
<ID>_O1</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>6</x0>
<y0>51</y0>
<width>109</width>
<height>69</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>1</inpinx0>
<inpiny0>48</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>//終了する 






try{

BufferedWriter dout = new BufferedWriter( new FileWriter(ini_file));
dout.write(&quot;edit_command=&quot;+edit_command+&quot;\n&quot;);
dout.write(&quot;asm_edit_command=&quot;+asm_edit_command+&quot;\n&quot;);
dout.write(&quot;compile_command=&quot;+compile_command+&quot;\n&quot;);
dout.write(&quot;assemble_command=&quot;+assemble_command+&quot;\n&quot;);
dout.write(&quot;fast_run_command=&quot;+fast_run_command+&quot;\n&quot;);
dout.write(&quot;.break\n&quot;);
dout.write(break_field.getText()+&quot;\n&quot;);
dout.write(&quot;.watch\n&quot;);
int nn = memory_windows.size();
for( int i = 0;i &lt; nn; i++ ){
  memory_window w = (memory_window)(memory_windows.get(i));
  dout.write( w.name+&quot;\n&quot;+w.start+&quot;\n&quot;+w.end+&quot;\n&quot;);
}
dout.close();
} catch( Exception e ){}


System.exit(0);
</codetext>
</operation>
<relation>
<ID>_R2</ID>
<pin1name>_A0(_PGUIclosed)</pin1name>
<pin2name>_O1</pin2name>
</relation>
<relation>
<ID>_R3</ID>
<pin1name>_PSTART</pin1name>
<pin2name>_A0(_Pstart)</pin2name>
</relation>
<xobject>
<ID>_X6</ID>
<x0>421</x0>
<y0>1</y0>
<width>131</width>
<height>161</height>
<ID_maker>44</ID_maker>
<objectname>symulator</objectname>
<description></description>
<pin>
<ID>_P0</ID>
<x0>69</x0>
<y0>478</y0>
<width>73</width>
<height>27</height>
<text>run_stop()</text>
<px>0</px>
<py>143</py>
</pin>
<pin>
<ID>_P1</ID>
<x0>385</x0>
<y0>348</y0>
<width>85</width>
<height>28</height>
<text>single_step()</text>
<px>0</px>
<py>25</py>
</pin>
<pin>
<ID>_P2</ID>
<x0>120</x0>
<y0>125</y0>
<width>60</width>
<height>30</height>
<text>add()</text>
<px>0</px>
<py>62</py>
</pin>
<pin>
<ID>_P3</ID>
<x0>111</x0>
<y0>54</y0>
<width>60</width>
<height>30</height>
<text>remove()</text>
<px>0</px>
<py>77</py>
</pin>
<operation>
<ID>_O8</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>174</x0>
<y0>463</y0>
<width>164</width>
<height>46</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>38</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>115</outpinx0>
<outpiny0>26</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>//実行モードを切り替える


run_mode = 1- run_mode;
if( run_mode == 0 ) run_button.setText(&quot;run&quot;); else run_button.setText(&quot;stop&quot;);
interval = Integer.parseInt( interval_field.getText() );
</codetext>
</operation>
<relation>
<ID>_R9</ID>
<pin1name>_P0</pin1name>
<pin2name>_O8</pin2name>
</relation>
<operation>
<ID>_O13</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>182</x0>
<y0>352</y0>
<width>161</width>
<height>67</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>108</inpinx0>
<inpiny0>42</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>2</inpinlinkcount>
<description></description>
<codetext>//シングルステップ実行
exec_one_cycle();
</codetext>
</operation>
<relation>
<ID>_R14</ID>
<pin1name>_P1</pin1name>
<pin2name>_O13</pin2name>
</relation>
<operation>
<ID>_O15</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>251</x0>
<y0>42</y0>
<width>235</width>
<height>47</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>26</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>//該当番号のメモリウィンドウを削除


if( memory_windows.size() &gt; list_no ) memory_windows.remove(list_no);

int nn = memory_windows.size();
if( nn &gt; 0){
if( list_no &gt;= nn ) list_no = nn-1;
memory_window w = (memory_window)(memory_windows.get(list_no));
name_field.setText(w.name);
start_field.setText(hex6(w.start));
end_field.setText(hex6(w.end));
}
</codetext>
</operation>
<relation>
<ID>_R16</ID>
<pin1name>_P3</pin1name>
<pin2name>_O15</pin2name>
</relation>
<operation>
<ID>_O19</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>258</x0>
<y0>119</y0>
<width>171</width>
<height>51</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>1</inpinx0>
<inpiny0>31</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>//メモリウィンドウを追加


String n = name_field.getText();
int s = Integer.parseInt(start_field.getText(),16);
int e = Integer.parseInt(end_field.getText(),16);
memory_windows.add( new memory_window( n, s, e ) );

int nn = memory_windows.size();
if( nn &gt; 0){
list_no = nn-1;
memory_window w = (memory_window)(memory_windows.get(list_no));
name_field.setText(w.name);
start_field.setText(hex6(w.start));
end_field.setText(hex6(w.end));
}
</codetext>
</operation>
<relation>
<ID>_R20</ID>
<pin1name>_P2</pin1name>
<pin2name>_O19</pin2name>
</relation>
<codeclip>
<ID>_C21</ID>
<x0>518</x0>
<y0>81</y0>
<width>198</width>
<height>33</height>
<codetext>// 1サイクル実行
public void exec_one_cycle(){

address = Integer.parseInt( address_field.getText(), 16 );
break_adrs = Integer.parseInt( break_field.getText(), 16 );
clock = Integer.parseInt( clock_field.getText() );

// 停止アドレスに到達したら停止する
if( break_adrs !=0 &amp;&amp; (break_adrs == address) ){
  run_stop();
}

// メモリ内容と周辺装置の状態を同期させる
io_sync();

// メモリー＞レジスタ サイクル
reg_c = mem_c[address];
reg_a = mem_a[address];
reg_r = mem_r[address];
if( (reg_c &amp; LD)  != 0 ) reg_d = mem_d[address];
if( (reg_c &amp; LDH) != 0 ) reg_h = mem_d[address];
if( (reg_c &amp; LDM) != 0 ) reg_m = mem_d[address];
if( (reg_c &amp; LDL) != 0 ) reg_l = mem_d[address];


//レジスター＞メモリ サイクル
if( (reg_c &amp; POINTER) != 0 ) address = reg_h * 65536 + reg_m * 256 + reg_l; else address = reg_a;
if( (reg_c &amp; RET)     != 0 ) mem_a[address] = reg_r;
if( (reg_c &amp; ST)      != 0 ) mem_d[address] = reg_d;

// レジスタ表示処理
address_field.setText(hex6(address));
c_field.setText(hex2(reg_c));
a_field.setText(hex6(reg_a));
r_field.setText(hex6(reg_r));
d_field.setText(hex2(reg_d));

// 制御信号表示処理
if( (reg_c &amp; IO)      != 0 ) io_label.setBackground(Color.green);      else  io_label.setBackground(Color.lightGray);
if( (reg_c &amp; POINTER) != 0 ) pointer_label.setBackground(Color.green); else  pointer_label.setBackground(Color.lightGray);
if( (reg_c &amp; RET)     != 0 ) ret_label.setBackground(Color.green);     else  ret_label.setBackground(Color.lightGray);
if( (reg_c &amp; ST)      != 0 ) st_label.setBackground(Color.green);      else  st_label.setBackground(Color.lightGray);
if( (reg_c &amp; LD)      != 0 ) ld_label.setBackground(Color.green);      else  ld_label.setBackground(Color.lightGray);
if( (reg_c &amp; LDH)     != 0 ) ldh_label.setBackground(Color.green);     else  ldh_label.setBackground(Color.lightGray);
if( (reg_c &amp; LDM)     != 0 ) ldm_label.setBackground(Color.green);     else  ldm_label.setBackground(Color.lightGray);
if( (reg_c &amp; LDL)     != 0 ) ldl_label.setBackground(Color.green);     else  ldl_label.setBackground(Color.lightGray);



    // メモリウィンドウ表示処理
    int n = memory_windows.size();
    message_area.setText(&quot;&quot;);
    for( int i = 0; i &lt; n; i++ ){
      memory_window w = (memory_window)(memory_windows.get(i));
      message_area.append(w.name+&quot;\n&quot;);
      for( int ad = w.start; ad &lt;= w.end; ad++ ){
        message_area.append( hex6(ad)+&quot;:&quot;+hex2(mem_c[ad])+&quot; &quot;+hex6(mem_a[ad])+&quot; &quot;+hex6(mem_r[ad])+&quot; &quot;+hex2(mem_d[ad])+&quot;\n&quot; );
      }
      message_area.append( &quot;\n&quot; );
    }


// クロック表示処理
clock++;
clock_field.setText(&quot;&quot;+clock);
}
</codetext>
</codeclip>
<aobject>
<ID>_A24</ID>
<x0>393</x0>
<y0>409</y0>
<width>147</width>
<height>85</height>
<ID_maker>11</ID_maker>
<objectname>Interval_Timer</objectname>
<description>新しいオブジェクト</description>
<state>
<ID>_SINIT</ID>
<x0>188</x0>
<y0>270</y0>
<width>70</width>
<height>40</height>
<text>  初期状態</text>
<isinitstate>1</isinitstate>
</state>
<pin>
<ID>_P0</ID>
<x0>200</x0>
<y0>364</y0>
<width>99</width>
<height>25</height>
<text>play_pause()</text>
<px>1</px>
<py>61</py>
</pin>
<pin>
<ID>_P2</ID>
<x0>476</x0>
<y0>155</y0>
<width>60</width>
<height>30</height>
<text>Action()</text>
<px>0</px>
<py>41</py>
</pin>
<codeclip>
<ID>_C3</ID>
<x0>200</x0>
<y0>5</y0>
<width>272</width>
<height>198</height>
<codetext>XTimer  timer;
class XTimer implements ActionListener{
  javax.swing.Timer unit;
 
  XTimer( int del ){
   unit = new javax.swing.Timer( del, this );
  }

  public void actionPerformed( ActionEvent e){
    Action();
  }

}
</codetext>
</codeclip>
<operation>
<ID>_O7</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>321</x0>
<y0>255</y0>
<width>171</width>
<height>53</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>3</inpinx0>
<inpiny0>31</inpiny0>
<inpinwidth>45</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// タイマーの起動・停止


if( run_mode != 0 ){
 timer = new XTimer( interval );
 timer.unit.start();
}
 else timer.unit.stop();
</codetext>
</operation>
<action>
<ID>_A9</ID>
<comp1name>_P0</comp1name>
<comp2name>_O7</comp2name>
</action>
</aobject>
<relation>
<ID>_R25</ID>
<pin1name>_O8</pin1name>
<pin2name>_A24(_P0)</pin2name>
</relation>
<relation>
<ID>_R26</ID>
<pin1name>_A24(_P2)</pin1name>
<pin2name>_O13</pin2name>
</relation>
<pin>
<ID>_P32</ID>
<x0>126</x0>
<y0>205</y0>
<width>60</width>
<height>30</height>
<text>home()</text>
<px>0</px>
<py>99</py>
</pin>
<pin>
<ID>_P33</ID>
<x0>122</x0>
<y0>257</y0>
<width>60</width>
<height>30</height>
<text>inc()</text>
<px>0</px>
<py>114</py>
</pin>
<pin>
<ID>_P34</ID>
<x0>120</x0>
<y0>309</y0>
<width>60</width>
<height>30</height>
<text>dec()</text>
<px>0</px>
<py>131</py>
</pin>
<operation>
<ID>_O35</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>279</x0>
<y0>188</y0>
<width>123</width>
<height>48</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>27</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>list_no = 0;


int nn = memory_windows.size();
if( nn &gt; 0){
memory_window w = (memory_window)(memory_windows.get(list_no));
name_field.setText(w.name);
start_field.setText(hex6(w.start));
end_field.setText(hex6(w.end));
}
</codetext>
</operation>
<relation>
<ID>_R36</ID>
<pin1name>_P32</pin1name>
<pin2name>_O35</pin2name>
</relation>
<operation>
<ID>_O37</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>283</x0>
<y0>241</y0>
<width>115</width>
<height>44</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>25</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>list_no++;


int nn = memory_windows.size();
if( nn &gt; 0 ){
if( list_no &gt;= nn ) list_no = nn -1;
memory_window w = (memory_window)(memory_windows.get(list_no));
name_field.setText(w.name);
start_field.setText(hex6(w.start));
end_field.setText(hex6(w.end));
}
</codetext>
</operation>
<relation>
<ID>_R38</ID>
<pin1name>_P33</pin1name>
<pin2name>_O37</pin2name>
</relation>
<operation>
<ID>_O39</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>280</x0>
<y0>291</y0>
<width>113</width>
<height>46</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>27</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>list_no--;


int nn = memory_windows.size();
if( nn &gt; 0){
if( list_no &lt; 0 ) list_no = 0;
memory_window w = (memory_window)(memory_windows.get(list_no));
name_field.setText(w.name);
start_field.setText(hex6(w.start));
end_field.setText(hex6(w.end));
}
</codetext>
</operation>
<relation>
<ID>_R40</ID>
<pin1name>_P34</pin1name>
<pin2name>_O39</pin2name>
</relation>
<pin>
<ID>_P41</ID>
<x0>448</x0>
<y0>207</y0>
<width>60</width>
<height>30</height>
<text>clear()</text>
<px>0</px>
<py>45</py>
</pin>
<operation>
<ID>_O42</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>573</x0>
<y0>202</y0>
<width>171</width>
<height>51</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>1</inpinx0>
<inpiny0>31</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>//メモリウィンドウを消去


memory_windows = new Vector();
list_no =0;
name_field.setText(&quot;&quot;);
start_field.setText(&quot;000000&quot;);
end_field.setText(&quot;000000&quot;);
</codetext>
</operation>
<relation>
<ID>_R43</ID>
<pin1name>_P41</pin1name>
<pin2name>_O42</pin2name>
</relation>
</xobject>
<codeclip>
<ID>_C9</ID>
<x0>680</x0>
<y0>1</y0>
<width>286</width>
<height>212</height>
<codetext>// 変数
JButton run_button; int run_mode = 0;
JTextField c_field, a_field, r_field, d_field;
int[] mem_r, mem_a, mem_c, mem_d;
int reg_r, reg_a, reg_c, reg_d, reg_h, reg_m, reg_l; 
JLabel io_label, pointer_label, ret_label, st_label;
JLabel ld_label, ldh_label, ldm_label, ldl_label;
JTextArea message_area, disp;
JTextField clock_field; int clock=0;
JTextField interval_field; int interval=1000;
JTextField address_field; int address;
JTextField no_field, name_field, start_field, end_field;
JTextField cmd_line;
JTextField break_field;int break_adrs = 0;
static final int AD_SIZE = 0x1000000;
int is_break;

 int KeyCode=0;
 int KeyAck = 0;
 boolean      is_gets = false;
 int list_no = 0;

String edit_command=&quot;&quot;; // コンパイラのソースファイルを編集するコマンド
String asm_edit_command=&quot;&quot;;// アセンブラのソースファイルを編集するコマンド
String compile_command=&quot;&quot;;// コンパイルコマンド
String assemble_command=&quot;&quot;;//アセンブルコマンド
String fast_run_command=&quot;&quot;;// 高速エミュレータ起動コマンド

static final int KEY_CODE=0xfffffd;
static final int PRT_STROBE=0xfffffe;
static final int PRT_DATA=0xffffff;

File ini_file = new File(&quot;card8_sym.ini&quot;);
</codetext>
</codeclip>
<relation>
<ID>_R11</ID>
<pin1name>_A0(_PArun_button)</pin1name>
<pin2name>_X6(_P0)</pin2name>
</relation>
<relation>
<ID>_R16</ID>
<pin1name>_A0(_PAsingle_button)</pin1name>
<pin2name>_X6(_P1)</pin2name>
</relation>
<xobject>
<ID>_X19</ID>
<x0>421</x0>
<y0>278</y0>
<width>233</width>
<height>437</height>
<ID_maker>75</ID_maker>
<objectname>set_variables</objectname>
<description></description>
<pin>
<ID>_P0</ID>
<x0>0</x0>
<y0>429</y0>
<width>164</width>
<height>19</height>
<text>r_field_is(JTextField t)</text>
<px>0</px>
<py>117</py>
</pin>
<pin>
<ID>_P1</ID>
<x0>0</x0>
<y0>450</y0>
<width>163</width>
<height>22</height>
<text>a_field_is(JTextField t)</text>
<px>0</px>
<py>101</py>
</pin>
<pin>
<ID>_P2</ID>
<x0>0</x0>
<y0>474</y0>
<width>148</width>
<height>23</height>
<text>c_field_is(JTextField t)</text>
<px>0</px>
<py>83</py>
</pin>
<pin>
<ID>_P3</ID>
<x0>0</x0>
<y0>500</y0>
<width>150</width>
<height>21</height>
<text>d_field_is(JTextField t)</text>
<px>0</px>
<py>133</py>
</pin>
<pin>
<ID>_P4</ID>
<x0>0</x0>
<y0>155</y0>
<width>146</width>
<height>22</height>
<text>ret_label_is(JLabel l)</text>
<px>0</px>
<py>189</py>
</pin>
<pin>
<ID>_P5</ID>
<x0>1</x0>
<y0>178</y0>
<width>138</width>
<height>24</height>
<text>st_label_is(JLabel l)</text>
<px>0</px>
<py>206</py>
</pin>
<pin>
<ID>_P6</ID>
<x0>4</x0>
<y0>23</y0>
<width>132</width>
<height>22</height>
<text>ld_label_is(JLabel l)</text>
<px>0</px>
<py>224</py>
</pin>
<pin>
<ID>_P7</ID>
<x0>7</x0>
<y0>51</y0>
<width>138</width>
<height>22</height>
<text>ldh_label_is(JLabel l)</text>
<px>0</px>
<py>244</py>
</pin>
<pin>
<ID>_P8</ID>
<x0>9</x0>
<y0>77</y0>
<width>141</width>
<height>23</height>
<text>ldm_label_is(JLabel l)</text>
<px>0</px>
<py>264</py>
</pin>
<pin>
<ID>_P9</ID>
<x0>0</x0>
<y0>102</y0>
<width>143</width>
<height>23</height>
<text>ldl_label_is(JLabel l)</text>
<px>0</px>
<py>281</py>
</pin>
<pin>
<ID>_P10</ID>
<x0>3</x0>
<y0>357</y0>
<width>205</width>
<height>22</height>
<text>message_area_is(JTextArea t)</text>
<px>0</px>
<py>300</py>
</pin>
<pin>
<ID>_P11</ID>
<x0>0</x0>
<y0>226</y0>
<width>184</width>
<height>21</height>
<text>clock_field_is(JTextField t)</text>
<px>0</px>
<py>318</py>
</pin>
<pin>
<ID>_P13</ID>
<x0>0</x0>
<y0>275</y0>
<width>184</width>
<height>21</height>
<text>start_field_is(JTextField t)</text>
<px>0</px>
<py>359</py>
</pin>
<pin>
<ID>_P14</ID>
<x0>0</x0>
<y0>298</y0>
<width>167</width>
<height>27</height>
<text>end_field_is(JTextField t)</text>
<px>0</px>
<py>378</py>
</pin>
<pin>
<ID>_P15</ID>
<x0>3</x0>
<y0>326</y0>
<width>211</width>
<height>27</height>
<text>interval_field_is(JTextField t)</text>
<px>0</px>
<py>397</py>
</pin>
<pin>
<ID>_P16</ID>
<x0>768</x0>
<y0>63</y0>
<width>52</width>
<height>25</height>
<text>start()</text>
<px>140</px>
<py>5</py>
</pin>
<pin>
<ID>_P17</ID>
<x0>0</x0>
<y0>400</y0>
<width>204</width>
<height>27</height>
<text>address_field_is(JTextField t)</text>
<px>0</px>
<py>67</py>
</pin>
<operation>
<ID>_O18</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>849</x0>
<y0>5</y0>
<width>115</width>
<height>48</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>27</inpiny0>
<inpinwidth>30</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>2</inpinlinkcount>
<description></description>
<codetext>// 初期化する



memory_windows = new Vector();
mem_r = new int[AD_SIZE];
mem_a = new int[AD_SIZE];
mem_c = new int[AD_SIZE];
mem_d = new int[AD_SIZE];

// すべてのメモリにdata命令をセットして読み書きできるようにしておく
for( int adrs = 0; adrs &lt; AD_SIZE; adrs++ ){
  mem_c[ adrs ] = DATA_INS;
  mem_a[ adrs ] = 0;
  mem_r[ adrs ] = 0;
  mem_d[ adrs ] = 0;
}

// 各ボタンを押した時に実行されるコマンドを設定する
String line;
try{

BufferedReader din = new BufferedReader( new FileReader(ini_file));
while( ((line=din.readLine())!=null)){
if( &quot;.break&quot;.equals(line) )   break;
if( &quot;.watch&quot;.equals(line) )   break;
if( line.startsWith(&quot;edit_command=&quot;)) edit_command=line.substring(13);
if( line.startsWith(&quot;asm_edit_command=&quot;)) asm_edit_command=line.substring(17);
if( line.startsWith(&quot;compile_command=&quot;)) compile_command=line.substring(16);
if( line.startsWith(&quot;assemble_command=&quot;)) assemble_command=line.substring(17);
if( line.startsWith(&quot;fast_run_command=&quot;)) fast_run_command=line.substring(17);
}
if( &quot;.break&quot;.equals(line) ){
  if( (line=din.readLine()) != null) {
    break_field.setText(line);
    line=din.readLine();
  }
}
if( &quot;.watch&quot;.equals(line) ){
  while(true){
    String name,start,end;
    if((name=din.readLine()) == null) break;
    if((start=din.readLine()) == null) break;
    if((end=din.readLine()) == null) break;
    int s = Integer.parseInt(start);
    int e = Integer.parseInt(end);
    memory_windows.add( new memory_window( name, s, e ) );
  }
}
din.close();
} catch( Exception e ){}
</codetext>
</operation>
<relation>
<ID>_R19</ID>
<pin1name>_P16</pin1name>
<pin2name>_O18</pin2name>
</relation>
<pin>
<ID>_P20</ID>
<x0>1</x0>
<y0>125</y0>
<width>161</width>
<height>26</height>
<text>pointer_label_is(JLabel l)</text>
<px>0</px>
<py>171</py>
</pin>
<operation>
<ID>_O21</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>160</x0>
<y0>3</y0>
<width>121</width>
<height>47</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(JLabel l)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>25</inpiny0>
<inpinwidth>76</inpinwidth>
<inpinheight>23</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>ld_label = l;
</codetext>
</operation>
<relation>
<ID>_R22</ID>
<pin1name>_P6</pin1name>
<pin2name>_O21</pin2name>
</relation>
<operation>
<ID>_O23</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>299</x0>
<y0>23</y0>
<width>121</width>
<height>52</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(JLabel l)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>76</inpinwidth>
<inpinheight>23</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>ldh_label = l;
</codetext>
</operation>
<operation>
<ID>_O26</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>429</x0>
<y0>50</y0>
<width>105</width>
<height>49</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(JLabel l)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>76</inpinwidth>
<inpinheight>23</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>ldm_label = l;
</codetext>
</operation>
<operation>
<ID>_O27</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>541</x0>
<y0>77</y0>
<width>98</width>
<height>52</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(JLabel l)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>76</inpinwidth>
<inpinheight>23</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>ldl_label = l;
</codetext>
</operation>
<relation>
<ID>_R28</ID>
<pin1name>_P7</pin1name>
<pin2name>_O23</pin2name>
</relation>
<relation>
<ID>_R29</ID>
<pin1name>_P8</pin1name>
<pin2name>_O26</pin2name>
</relation>
<relation>
<ID>_R30</ID>
<pin1name>_P9</pin1name>
<pin2name>_O27</pin2name>
</relation>
<operation>
<ID>_O31</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>645</x0>
<y0>105</y0>
<width>130</width>
<height>48</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(JLabel l)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>26</inpiny0>
<inpinwidth>76</inpinwidth>
<inpinheight>23</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>pointer_label = l;
</codetext>
</operation>
<relation>
<ID>_R32</ID>
<pin1name>_P20</pin1name>
<pin2name>_O31</pin2name>
</relation>
<operation>
<ID>_O33</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>779</x0>
<y0>127</y0>
<width>111</width>
<height>51</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(JLabel l)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>76</inpinwidth>
<inpinheight>23</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>ret_label = l;
</codetext>
</operation>
<relation>
<ID>_R34</ID>
<pin1name>_P4</pin1name>
<pin2name>_O33</pin2name>
</relation>
<operation>
<ID>_O35</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>895</x0>
<y0>150</y0>
<width>100</width>
<height>52</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(JLabel l)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>76</inpinwidth>
<inpinheight>23</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>st_label = l;
</codetext>
</operation>
<relation>
<ID>_R36</ID>
<pin1name>_P5</pin1name>
<pin2name>_O35</pin2name>
</relation>
<operation>
<ID>_O37</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>196</x0>
<y0>200</y0>
<width>125</width>
<height>50</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(JTextField t)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>26</inpiny0>
<inpinwidth>104</inpinwidth>
<inpinheight>24</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>clock_field = t;
</codetext>
</operation>
<relation>
<ID>_R38</ID>
<pin1name>_P11</pin1name>
<pin2name>_O37</pin2name>
</relation>
<operation>
<ID>_O41</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>453</x0>
<y0>246</y0>
<width>125</width>
<height>50</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(JTextField t)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>26</inpiny0>
<inpinwidth>104</inpinwidth>
<inpinheight>24</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>start_field = t;
</codetext>
</operation>
<relation>
<ID>_R42</ID>
<pin1name>_P13</pin1name>
<pin2name>_O41</pin2name>
</relation>
<operation>
<ID>_O43</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>580</x0>
<y0>273</y0>
<width>125</width>
<height>50</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(JTextField t)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>26</inpiny0>
<inpinwidth>104</inpinwidth>
<inpinheight>24</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>end_field = t;
</codetext>
</operation>
<relation>
<ID>_R44</ID>
<pin1name>_P14</pin1name>
<pin2name>_O43</pin2name>
</relation>
<operation>
<ID>_O45</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>709</x0>
<y0>301</y0>
<width>138</width>
<height>49</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(JTextField t)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>26</inpiny0>
<inpinwidth>104</inpinwidth>
<inpinheight>24</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>interval_field = t;
</codetext>
</operation>
<relation>
<ID>_R46</ID>
<pin1name>_P15</pin1name>
<pin2name>_O45</pin2name>
</relation>
<operation>
<ID>_O47</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>856</x0>
<y0>331</y0>
<width>139</width>
<height>51</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(JTextArea t)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>26</inpiny0>
<inpinwidth>104</inpinwidth>
<inpinheight>24</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>message_area = t;
</codetext>
</operation>
<relation>
<ID>_R48</ID>
<pin1name>_P10</pin1name>
<pin2name>_O47</pin2name>
</relation>
<operation>
<ID>_O49</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>233</x0>
<y0>376</y0>
<width>137</width>
<height>49</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(JTextField t)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>26</inpiny0>
<inpinwidth>104</inpinwidth>
<inpinheight>24</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>address_field = t;
</codetext>
</operation>
<relation>
<ID>_R50</ID>
<pin1name>_P17</pin1name>
<pin2name>_O49</pin2name>
</relation>
<operation>
<ID>_O51</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>375</x0>
<y0>400</y0>
<width>125</width>
<height>50</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(JTextField t)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>26</inpiny0>
<inpinwidth>104</inpinwidth>
<inpinheight>24</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>r_field = t;
</codetext>
</operation>
<relation>
<ID>_R52</ID>
<pin1name>_P0</pin1name>
<pin2name>_O51</pin2name>
</relation>
<operation>
<ID>_O53</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>510</x0>
<y0>423</y0>
<width>125</width>
<height>50</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(JTextField t)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>26</inpiny0>
<inpinwidth>104</inpinwidth>
<inpinheight>24</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>a_field = t;
</codetext>
</operation>
<relation>
<ID>_R54</ID>
<pin1name>_P1</pin1name>
<pin2name>_O53</pin2name>
</relation>
<operation>
<ID>_O55</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>641</x0>
<y0>447</y0>
<width>125</width>
<height>50</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(JTextField t)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>26</inpiny0>
<inpinwidth>104</inpinwidth>
<inpinheight>24</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>c_field = t;
</codetext>
</operation>
<relation>
<ID>_R56</ID>
<pin1name>_P2</pin1name>
<pin2name>_O55</pin2name>
</relation>
<operation>
<ID>_O57</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>772</x0>
<y0>473</y0>
<width>125</width>
<height>50</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(JTextField t)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>26</inpiny0>
<inpinwidth>104</inpinwidth>
<inpinheight>24</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>d_field = t;
</codetext>
</operation>
<relation>
<ID>_R58</ID>
<pin1name>_P3</pin1name>
<pin2name>_O57</pin2name>
</relation>
<pin>
<ID>_P59</ID>
<x0>0</x0>
<y0>588</y0>
<width>169</width>
<height>22</height>
<text>run_button_is(JButton b)</text>
<px>0</px>
<py>32</py>
</pin>
<operation>
<ID>_O60</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>364</x0>
<y0>560</y0>
<width>123</width>
<height>51</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(JButton b)</inpintext>
<inpinx0>2</inpinx0>
<inpiny0>31</inpiny0>
<inpinwidth>88</inpinwidth>
<inpinheight>19</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>run_button = b;
</codetext>
</operation>
<relation>
<ID>_R61</ID>
<pin1name>_P59</pin1name>
<pin2name>_O60</pin2name>
</relation>
<pin>
<ID>_P62</ID>
<x0>0</x0>
<y0>248</y0>
<width>184</width>
<height>23</height>
<text>name_field_is(JTextField t)</text>
<px>0</px>
<py>338</py>
</pin>
<operation>
<ID>_O63</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>326</x0>
<y0>223</y0>
<width>125</width>
<height>50</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(JTextField t)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>26</inpiny0>
<inpinwidth>104</inpinwidth>
<inpinheight>24</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>name_field = t;
</codetext>
</operation>
<relation>
<ID>_R64</ID>
<pin1name>_P62</pin1name>
<pin2name>_O63</pin2name>
</relation>
<pin>
<ID>_P65</ID>
<x0>0</x0>
<y0>616</y0>
<width>140</width>
<height>23</height>
<text>io_label_is(JLabel l)</text>
<px>0</px>
<py>152</py>
</pin>
<operation>
<ID>_O66</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>493</x0>
<y0>589</y0>
<width>100</width>
<height>52</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(JLabel l)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>76</inpinwidth>
<inpinheight>23</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>io_label = l;
</codetext>
</operation>
<relation>
<ID>_R67</ID>
<pin1name>_P65</pin1name>
<pin2name>_O66</pin2name>
</relation>
<pin>
<ID>_P68</ID>
<x0>0</x0>
<y0>558</y0>
<width>182</width>
<height>21</height>
<text>break_field_is(JTextField t)</text>
<px>0</px>
<py>417</py>
</pin>
<operation>
<ID>_O69</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>225</x0>
<y0>530</y0>
<width>125</width>
<height>50</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(JTextField t)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>26</inpiny0>
<inpinwidth>104</inpinwidth>
<inpinheight>24</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>break_field = t;
</codetext>
</operation>
<relation>
<ID>_R70</ID>
<pin1name>_P68</pin1name>
<pin2name>_O69</pin2name>
</relation>
<pin>
<ID>_P71</ID>
<x0>543</x0>
<y0>23</y0>
<width>60</width>
<height>30</height>
<text>init()</text>
<px>0</px>
<py>50</py>
</pin>
<operation>
<ID>_O72</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>622</x0>
<y0>1</y0>
<width>204</width>
<height>51</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>32</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>155</outpinx0>
<outpiny0>31</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// 初期化ファイルを再設定する


JFileChooser chooser = new JFileChooser(new File(&quot;.&quot;));
chooser.setDialogTitle( &quot;Select .ini File&quot; );
chooser.setFileSelectionMode( JFileChooser.FILES_AND_DIRECTORIES );
if( chooser.showSaveDialog(null) != JFileChooser.APPROVE_OPTION ) return;

ini_file = chooser.getSelectedFile();
</codetext>
</operation>
<relation>
<ID>_R73</ID>
<pin1name>_P71</pin1name>
<pin2name>_O72</pin2name>
</relation>
<relation>
<ID>_R74</ID>
<pin1name>_O72</pin1name>
<pin2name>_O18</pin2name>
</relation>
</xobject>
<relation>
<ID>_R33</ID>
<pin1name>_A0(_Pmessage_area)</pin1name>
<pin2name>_X19(_P10)</pin2name>
</relation>
<relation>
<ID>_R34</ID>
<pin1name>_A0(_Pclock_field)</pin1name>
<pin2name>_X19(_P11)</pin2name>
</relation>
<relation>
<ID>_R36</ID>
<pin1name>_A0(_Pstart_field)</pin1name>
<pin2name>_X19(_P13)</pin2name>
</relation>
<relation>
<ID>_R37</ID>
<pin1name>_A0(_Pend_field)</pin1name>
<pin2name>_X19(_P14)</pin2name>
</relation>
<relation>
<ID>_R38</ID>
<pin1name>_A0(_Pinterval_field)</pin1name>
<pin2name>_X19(_P15)</pin2name>
</relation>
<codeclip>
<ID>_C40</ID>
<x0>681</x0>
<y0>358</y0>
<width>236</width>
<height>164</height>
<codetext>// メモリウィンドウ
Vector memory_windows;
class memory_window{
  String name;
  int start;
  int end;
  memory_window( String n, int s, int e ){
    name = n; start=s; end=e;
  }
}
</codetext>
</codeclip>
<xobject>
<ID>_X42</ID>
<x0>422</x0>
<y0>175</y0>
<width>219</width>
<height>98</height>
<ID_maker>14</ID_maker>
<objectname>memory_edit</objectname>
<description></description>
<pin>
<ID>_P0</ID>
<x0>117</x0>
<y0>235</y0>
<width>142</width>
<height>26</height>
<text>set_address(String s)</text>
<px>0</px>
<py>79</py>
</pin>
<pin>
<ID>_P1</ID>
<x0>108</x0>
<y0>170</y0>
<width>60</width>
<height>30</height>
<text>inc()</text>
<px>0</px>
<py>28</py>
</pin>
<pin>
<ID>_P2</ID>
<x0>121</x0>
<y0>313</y0>
<width>60</width>
<height>30</height>
<text>dec()</text>
<px>0</px>
<py>45</py>
</pin>
<pin>
<ID>_P3</ID>
<x0>101</x0>
<y0>109</y0>
<width>112</width>
<height>25</height>
<text>mem_set()</text>
<px>0</px>
<py>61</py>
</pin>
<operation>
<ID>_O4</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>324</x0>
<y0>241</y0>
<width>163</width>
<height>47</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(String s)</inpintext>
<inpinx0>2</inpinx0>
<inpiny0>28</inpiny0>
<inpinwidth>78</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// メモリのデータを表示


address = Integer.parseInt( s, 16 );

// レジスタ表示処理
c_field.setText(hex2(mem_c[address]));
a_field.setText(hex6(mem_a[address]));
r_field.setText(hex6(mem_r[address]));
d_field.setText(hex2(mem_d[address]));

// 制御信号表示処理
int mc = mem_c[address];
if( (mc &amp; IO)      != 0 ) io_label.setBackground(Color.green);      else  io_label.setBackground(Color.lightGray);
if( (mc &amp; POINTER) != 0 ) pointer_label.setBackground(Color.green); else  pointer_label.setBackground(Color.lightGray);
if( (mc &amp; RET)     != 0 ) ret_label.setBackground(Color.green);     else  ret_label.setBackground(Color.lightGray);
if( (mc &amp; ST)      != 0 ) st_label.setBackground(Color.green);      else  st_label.setBackground(Color.lightGray);
if( (mc &amp; LD)      != 0 ) ld_label.setBackground(Color.green);      else  ld_label.setBackground(Color.lightGray);
if( (mc &amp; LDH)     != 0 ) ldh_label.setBackground(Color.green);     else  ldh_label.setBackground(Color.lightGray);
if( (mc &amp; LDM)     != 0 ) ldm_label.setBackground(Color.green);     else  ldm_label.setBackground(Color.lightGray);
if( (mc &amp; LDL)     != 0 ) ldl_label.setBackground(Color.green);     else  ldl_label.setBackground(Color.lightGray);
</codetext>
</operation>
<relation>
<ID>_R5</ID>
<pin1name>_P0</pin1name>
<pin2name>_O4</pin2name>
</relation>
<operation>
<ID>_O6</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>307</x0>
<y0>158</y0>
<width>263</width>
<height>45</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>1</inpinx0>
<inpiny0>24</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// アドレスを+1してメモリのデータを表示

address++;
if( address &gt; 0xffffff ) address-=0xffffff;

// レジスタ表示処理
address_field.setText(hex6(address));
c_field.setText(hex2(mem_c[address]));
a_field.setText(hex6(mem_a[address]));
r_field.setText(hex6(mem_r[address]));
d_field.setText(hex2(mem_d[address]));

// 制御信号表示処理
int mc = mem_c[address];
if( (mc &amp; IO)      != 0 ) io_label.setBackground(Color.green);      else  io_label.setBackground(Color.lightGray);
if( (mc &amp; POINTER) != 0 ) pointer_label.setBackground(Color.green); else  pointer_label.setBackground(Color.lightGray);
if( (mc &amp; RET)     != 0 ) ret_label.setBackground(Color.green);     else  ret_label.setBackground(Color.lightGray);
if( (mc &amp; ST)      != 0 ) st_label.setBackground(Color.green);      else  st_label.setBackground(Color.lightGray);
if( (mc &amp; LD)      != 0 ) ld_label.setBackground(Color.green);      else  ld_label.setBackground(Color.lightGray);
if( (mc &amp; LDH)     != 0 ) ldh_label.setBackground(Color.green);     else  ldh_label.setBackground(Color.lightGray);
if( (mc &amp; LDM)     != 0 ) ldm_label.setBackground(Color.green);     else  ldm_label.setBackground(Color.lightGray);
if( (mc &amp; LDL)     != 0 ) ldl_label.setBackground(Color.green);     else  ldl_label.setBackground(Color.lightGray);
</codetext>
</operation>
<relation>
<ID>_R7</ID>
<pin1name>_P1</pin1name>
<pin2name>_O6</pin2name>
</relation>
<operation>
<ID>_O9</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>305</x0>
<y0>311</y0>
<width>268</width>
<height>45</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>1</inpinx0>
<inpiny0>24</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// アドレスを-1してメモリのデータを表示

address--;
if( address &lt; 0 ) address=0;

// レジスタ表示処理
address_field.setText(hex6(address));
c_field.setText(hex2(mem_c[address]));
a_field.setText(hex6(mem_a[address]));
r_field.setText(hex6(mem_r[address]));
d_field.setText(hex2(mem_d[address]));

// 制御信号表示処理
int mc = mem_c[address];
if( (mc &amp; IO)      != 0 ) io_label.setBackground(Color.green);      else  io_label.setBackground(Color.lightGray);
if( (mc &amp; POINTER) != 0 ) pointer_label.setBackground(Color.green); else  pointer_label.setBackground(Color.lightGray);
if( (mc &amp; RET)     != 0 ) ret_label.setBackground(Color.green);     else  ret_label.setBackground(Color.lightGray);
if( (mc &amp; ST)      != 0 ) st_label.setBackground(Color.green);      else  st_label.setBackground(Color.lightGray);
if( (mc &amp; LD)      != 0 ) ld_label.setBackground(Color.green);      else  ld_label.setBackground(Color.lightGray);
if( (mc &amp; LDH)     != 0 ) ldh_label.setBackground(Color.green);     else  ldh_label.setBackground(Color.lightGray);
if( (mc &amp; LDM)     != 0 ) ldm_label.setBackground(Color.green);     else  ldm_label.setBackground(Color.lightGray);
if( (mc &amp; LDL)     != 0 ) ldl_label.setBackground(Color.green);     else  ldl_label.setBackground(Color.lightGray);
</codetext>
</operation>
<relation>
<ID>_R10</ID>
<pin1name>_P2</pin1name>
<pin2name>_O9</pin2name>
</relation>
<operation>
<ID>_O11</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>303</x0>
<y0>94</y0>
<width>267</width>
<height>43</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>24</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// 表示されているデータをメモリに書き込む

address = Integer.parseInt( address_field.getText(), 16 );

mem_c[address] = Integer.parseInt( c_field.getText(), 16 );
mem_a[address] = Integer.parseInt( a_field.getText(), 16 );
mem_r[address] = Integer.parseInt( r_field.getText(), 16 );
mem_d[address] = Integer.parseInt( d_field.getText(), 16 );

// 制御信号表示処理
int mc = mem_c[address];
if( (mc &amp; IO)      != 0 ) io_label.setBackground(Color.green);      else  io_label.setBackground(Color.lightGray);
if( (mc &amp; POINTER) != 0 ) pointer_label.setBackground(Color.green); else  pointer_label.setBackground(Color.lightGray);
if( (mc &amp; RET)     != 0 ) ret_label.setBackground(Color.green);     else  ret_label.setBackground(Color.lightGray);
if( (mc &amp; ST)      != 0 ) st_label.setBackground(Color.green);      else  st_label.setBackground(Color.lightGray);
if( (mc &amp; LD)      != 0 ) ld_label.setBackground(Color.green);      else  ld_label.setBackground(Color.lightGray);
if( (mc &amp; LDH)     != 0 ) ldh_label.setBackground(Color.green);     else  ldh_label.setBackground(Color.lightGray);
if( (mc &amp; LDM)     != 0 ) ldm_label.setBackground(Color.green);     else  ldm_label.setBackground(Color.lightGray);
if( (mc &amp; LDL)     != 0 ) ldl_label.setBackground(Color.green);     else  ldl_label.setBackground(Color.lightGray);
</codetext>
</operation>
<relation>
<ID>_R12</ID>
<pin1name>_P3</pin1name>
<pin2name>_O11</pin2name>
</relation>
</xobject>
<relation>
<ID>_R44</ID>
<pin1name>_A0(_PAinc_addr)</pin1name>
<pin2name>_X42(_P1)</pin2name>
</relation>
<relation>
<ID>_R45</ID>
<pin1name>_A0(_PAdec_addr)</pin1name>
<pin2name>_X42(_P2)</pin2name>
</relation>
<relation>
<ID>_R46</ID>
<pin1name>_A0(_PAmem_set)</pin1name>
<pin2name>_X42(_P3)</pin2name>
</relation>
<codeclip>
<ID>_C47</ID>
<x0>680</x0>
<y0>536</y0>
<width>230</width>
<height>35</height>
<codetext>// 長さが6文字の16進数文字列を返す
public String hex6( int i ){
  String s = Integer.toHexString(i);
  int l = s.length();
  if( l == 1 ) return &quot;00000&quot;+s;
  if( l == 2 ) return &quot;0000&quot;+s;
  if( l == 3 ) return &quot;000&quot;+s;
  if( l == 4 ) return &quot;00&quot;+s;
  if( l == 5 ) return &quot;0&quot;+s;
  return s;
}
</codetext>
</codeclip>
<codeclip>
<ID>_C48</ID>
<x0>680</x0>
<y0>583</y0>
<width>229</width>
<height>34</height>
<codetext>// 長さが2文字の16進数文字列を返す
public String hex2( int i ){
  String s = Integer.toHexString(i);
  int l = s.length();
  if( l ==1 ) return &quot;0&quot;+s;
  return s;
}
</codetext>
</codeclip>
<codeclip>
<ID>_C50</ID>
<x0>681</x0>
<y0>216</y0>
<width>251</width>
<height>136</height>
<codetext>//コマンドレジスタのビット割り当て
static final int IO=128;
static final int POINTER=64;
static final int RET=32;
static final int ST=16;
static final int LD=8;
static final int LDH=4;
static final int LDM=2;
static final int LDL=1;

static final int DATA_INS = 24; // data命令
</codetext>
</codeclip>
<relation>
<ID>_R53</ID>
<pin1name>_A0(_Prun_button)</pin1name>
<pin2name>_X19(_P59)</pin2name>
</relation>
<プロパティ>
<ID>properties</ID>
<LookandFeel>javax.swing.plaf.metal.MetalLookAndFeel</LookandFeel>
<MainWinx0>0</MainWinx0>
<MainWiny0>0</MainWiny0>
<MainWinWidth>1024</MainWinWidth>
<MainWinHeight>740</MainWinHeight>
<MesgWinx0>0</MesgWinx0>
<MesgWiny0>0</MesgWiny0>
<MesgWinWidth>1024</MesgWinWidth>
<MesgWinHeight>745</MesgWinHeight>
<FileWinx0>36</FileWinx0>
<FileWiny0>478</FileWiny0>
<FileWinWidth>578</FileWinWidth>
<FileWinHeight>262</FileWinHeight>
<EditWinx0>347</EditWinx0>
<EditWiny0>0</EditWiny0>
<EditWinWidth>676</EditWinWidth>
<EditWinHeight>541</EditWinHeight>
<PropWinx0>1</PropWinx0>
<PropWiny0>1</PropWiny0>
<PropWinWidth>615</PropWinWidth>
<PropWinHeight>448</PropWinHeight>
<DividerLocation1>2</DividerLocation1>
<DividerLocation2>2</DividerLocation2>
<ToolBarVisible>1</ToolBarVisible>
<ViewSourceAtCompile>0</ViewSourceAtCompile>
<NoSourceCreate>0</NoSourceCreate>
<JavaEditCommand>geany</JavaEditCommand>
<JavaViewCommand></JavaViewCommand>
<HelpCommand>xdg-open ./help/manual.html</HelpCommand>
<ApplicationType>0</ApplicationType>
<CompileCommand0>./compile_java</CompileCommand0>
<RunCommand0>./run_java</RunCommand0>
<GUIDesignerCommand0>java -jar guidsin.jar -java</GUIDesignerCommand0>
<ImportFiles0> import java.awt.*;
 import java.awt.event.*;
 import javax.swing.*;
 import javax.swing.event.*;
 import javax.swing.tree.*;
 import java.io.*;
 import java.net.*;
 import java.util.*;
import java.awt.geom.*;
import java.awt.print.*;
import javax.swing.border.*;
import javax.swing.filechooser.*;
 import javax.swing.*;
 import javax.swing.event.*;
 import javax.swing.tree.*;
 import java.io.*;
 import java.net.*;
 import java.util.*;
import java.awt.image.BufferedImage;
import javax.sound.sampled.*;

class Starter{
  public static void main( String args[] ){
    %AppName% ap = new %AppName%();
    ap.ARGS = args;
    ap.Start();
  }
}
</ImportFiles0>
<ProgramStartupCode0> String[] ARGS;
</ProgramStartupCode0>
<NativeHelpCommand0></NativeHelpCommand0>
<CompileCommand1></CompileCommand1>
<RunCommand1></RunCommand1>
<GUIDesignerCommand1>java -jar guidsin.jar -applet</GUIDesignerCommand1>
<ImportFiles1> import java.awt.*;
 import java.awt.event.*;
 import java.applet.*;
 import javax.swing.*;
 import javax.swing.event.*;
 import javax.swing.tree.*;
 import java.io.*;
 import java.net.*;
 import java.util.*;
 public class javatext extends Applet {
   %AppName% ap;
   public void init() {
     ap = new %AppName%();
     ap.APPLET = this;
     ap.Start();
   }
 }
</ImportFiles1>
<ProgramStartupCode1> Applet APPLET;
</ProgramStartupCode1>
<NativeHelpCommand1></NativeHelpCommand1>
<CompileCommand2></CompileCommand2>
<RunCommand2></RunCommand2>
<GUIDesignerCommand2></GUIDesignerCommand2>
<ImportFiles2>#include &lt;stdio.h&gt;

void Startup();
</ImportFiles2>
<ProgramStartupCode2>int main(){
 Startup();
 %AppName%::Start();
 }
</ProgramStartupCode2>
<NativeHelpCommand2></NativeHelpCommand2>
<CompileCommand3></CompileCommand3>
<RunCommand3></RunCommand3>
<GUIDesignerCommand3>java -jar guidsin.jar -cpp</GUIDesignerCommand3>
<ImportFiles3>#include &lt;stdio.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;math.h&gt;
#include &quot;Ekagen.h&quot;
void Startup();
</ImportFiles3>
<ProgramStartupCode3>void Emain(){
Startup();
%AppName%::Start();
}
</ProgramStartupCode3>
<NativeHelpCommand3></NativeHelpCommand3>
<MoveStep>8</MoveStep>
<ImageEditCommand></ImageEditCommand>
<CompilerFileName>javac.exe</CompilerFileName>
<CompileCommand4>./compile_android Test com example test</CompileCommand4>
<RunCommand4>./run_android Test com example test</RunCommand4>
<GUIDesignerCommand4>java -jar guidsin.jar -android</GUIDesignerCommand4>
<ImportFiles4>package com.example.test;

import android.os.Bundle;
import android.app.Activity;
import android.view.View;
import android.graphics.Bitmap;
import android.graphics.Canvas;
import android.graphics.Color;
import android.graphics.Paint;
import android.graphics.Paint.Style;
import android.widget.Button;
import android.view.SurfaceHolder;
import android.view.SurfaceHolder.Callback;
import android.view.SurfaceView;
import android.widget.EditText;
import android.text.SpannableStringBuilder;
import android.text.TextWatcher;
import android.text.Editable;
import android.graphics.Matrix;
import android.graphics.Typeface;
import android.graphics.RectF;
import android.graphics.BitmapFactory;
import java.io.*;
 import java.net.*;
import java.util.*;
import java.text.SimpleDateFormat;
import android.media.MediaPlayer;
import android.os.Handler;
import android.content.res.Configuration;
import android.view.LayoutInflater;
import android.view.ViewGroup;
import android.app.Activity;
import android.graphics.Color;

import android.widget.AbsoluteLayout;
import android.widget.*;
import android.view.Gravity;
import android.view.View.OnClickListener;

import android.hardware.Camera;

public class HelloWorld extends Activity {
  public void onCreate(Bundle bundle) {
    super.onCreate(bundle);
    %AppName% ap = new %AppName%();
    ap.ACTIVITY = this;
    ap.Start();
  }
}
</ImportFiles4>
<ProgramStartupCode4>Activity ACTIVITY;
</ProgramStartupCode4>
<NativeHelpCommand4>&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt;
&lt;manifest xmlns:android=&quot;http://schemas.android.com/apk/res/android&quot;
    package=&quot;com.example.test&quot;
    android:versionCode=&quot;1&quot;
    android:versionName=&quot;1.0&quot; &gt;

    
    
  &lt;uses-permission android:name=&quot;android.permission.CAMERA&quot; /&gt; 
  &lt;uses-feature android:name=&quot;android.hardware.camera&quot; /&gt; 
  &lt;uses-feature android:name=&quot;android.hardware.usb.host&quot; /&gt; 
  &lt;uses-permission android:name=&quot;android.permission.RECORD_AUDIO&quot;/&gt;
  &lt;uses-permission android:name=&quot;android.permission.WRITE_EXTERNAL_STORAGE&quot; /&gt; 
  &lt;uses-permission android:name=&quot;android.permission.INTERNET&quot;/&gt;

  &lt;uses-sdk android:minSdkVersion=&quot;3&quot; android:targetSdkVersion=&quot;21&quot;/&gt;
  
 
    &lt;application android:label=&quot;@string/app_name&quot; &gt;
        &lt;activity
            android:name=&quot;HelloWorld&quot;
            android:label=&quot;@string/app_name&quot; &gt;
            &lt;intent-filter&gt;
                &lt;action android:name=&quot;android.intent.action.MAIN&quot; /&gt;

                &lt;category android:name=&quot;android.intent.category.LAUNCHER&quot; /&gt;
            &lt;/intent-filter&gt;
        &lt;/activity&gt;
    &lt;/application&gt;

&lt;/manifest&gt;
</NativeHelpCommand4>
<HtmlEditCommand></HtmlEditCommand>
<CompileCommand5></CompileCommand5>
<RunCommand5></RunCommand5>
<GUIDesignerCommand5></GUIDesignerCommand5>
<ImportFiles5></ImportFiles5>
<ProgramStartupCode5>gosub @_PSTART
end
</ProgramStartupCode5>
<NativeHelpCommand5></NativeHelpCommand5>
<NoOptimizePin>0</NoOptimizePin>
<CompileCommand6>./compile_c</CompileCommand6>
<RunCommand6>./run_c</RunCommand6>
<GUIDesignerCommand6></GUIDesignerCommand6>
<ImportFiles6>#include &lt;setjmp.h&gt;
#include &lt;pthread.h&gt;
#include &lt;stdio.h&gt;
#include &lt;stdlib.h&gt;
#include &lt;stdarg.h&gt;
#include &lt;string.h&gt;
#include &lt;unistd.h&gt;
#include &lt;sys/stat.h&gt;
#include &lt;fcntl.h&gt;
#include &lt;math.h&gt;
#include &lt;sys/socket.h&gt;
#include &lt;netinet/in.h&gt;
#include &lt;arpa/inet.h&gt;
#include &lt;netdb.h&gt;

#include &lt;X11/Xlib.h&gt;
#include &lt;X11/Xutil.h&gt;
#include &lt;X11/Xlocale.h&gt; /* ロケール用ヘッダーファイル */
#include &lt;X11/xpm.h&gt;
#include &lt;sys/time.h&gt;
#include &lt;signal.h&gt;
#include &lt;unistd.h&gt;
#include &lt;termios.h&gt;
#include &lt;errno.h&gt;
</ImportFiles6>
<ProgramStartupCode6>int ARGC; char** ARGV;
int main( int argc, char** argv ){
  ARGC=argc;
  ARGV=argv;
  _PSTART();
}
</ProgramStartupCode6>
<NativeHelpCommand6></NativeHelpCommand6>
<IDF_LocalVariable5>\</IDF_LocalVariable5>
<IDF_LocalVariable7>\</IDF_LocalVariable7>
<CompileCommand7></CompileCommand7>
<RunCommand7></RunCommand7>
<GUIDesignerCommand7></GUIDesignerCommand7>
<ImportFiles7></ImportFiles7>
<ProgramStartupCode7></ProgramStartupCode7>
<NativeHelpCommand7></NativeHelpCommand7>
</プロパティ>
<relation>
<ID>_R60</ID>
<pin1name>_A0(_Pr_reg)</pin1name>
<pin2name>_X19(_P0)</pin2name>
</relation>
<relation>
<ID>_R61</ID>
<pin1name>_A0(_Pa_reg)</pin1name>
<pin2name>_X19(_P1)</pin2name>
</relation>
<relation>
<ID>_R62</ID>
<pin1name>_A0(_Pc_reg)</pin1name>
<pin2name>_X19(_P2)</pin2name>
</relation>
<relation>
<ID>_R63</ID>
<pin1name>_A0(_Pd_reg)</pin1name>
<pin2name>_X19(_P3)</pin2name>
</relation>
<relation>
<ID>_R64</ID>
<pin1name>_A0(_Ppointer_flg)</pin1name>
<pin2name>_X19(_P20)</pin2name>
</relation>
<relation>
<ID>_R65</ID>
<pin1name>_A0(_Preturn_flg)</pin1name>
<pin2name>_X19(_P4)</pin2name>
</relation>
<relation>
<ID>_R66</ID>
<pin1name>_A0(_Pstore_flg)</pin1name>
<pin2name>_X19(_P5)</pin2name>
</relation>
<relation>
<ID>_R67</ID>
<pin1name>_A0(_Pld_flg)</pin1name>
<pin2name>_X19(_P6)</pin2name>
</relation>
<relation>
<ID>_R68</ID>
<pin1name>_A0(_Pldh_flg)</pin1name>
<pin2name>_X19(_P7)</pin2name>
</relation>
<relation>
<ID>_R69</ID>
<pin1name>_A0(_Pldm_flg)</pin1name>
<pin2name>_X19(_P8)</pin2name>
</relation>
<relation>
<ID>_R70</ID>
<pin1name>_A0(_Pldl_flg)</pin1name>
<pin2name>_X19(_P9)</pin2name>
</relation>
<relation>
<ID>_R71</ID>
<pin1name>_A0(_PAadd_list)</pin1name>
<pin2name>_X6(_P2)</pin2name>
</relation>
<relation>
<ID>_R72</ID>
<pin1name>_A0(_PAdel_list)</pin1name>
<pin2name>_X6(_P3)</pin2name>
</relation>
<relation>
<ID>_R73</ID>
<pin1name>_A0(_PAhome_list)</pin1name>
<pin2name>_X6(_P32)</pin2name>
</relation>
<relation>
<ID>_R74</ID>
<pin1name>_A0(_PAinc_list)</pin1name>
<pin2name>_X6(_P33)</pin2name>
</relation>
<relation>
<ID>_R75</ID>
<pin1name>_A0(_PAdec_list)</pin1name>
<pin2name>_X6(_P34)</pin2name>
</relation>
<relation>
<ID>_R77</ID>
<pin1name>_A0(_Paddr_reg)</pin1name>
<pin2name>_X19(_P17)</pin2name>
</relation>
<relation>
<ID>_R78</ID>
<pin1name>_A0(_Pname_field)</pin1name>
<pin2name>_X19(_P62)</pin2name>
</relation>
<xobject>
<ID>_X79</ID>
<x0>0</x0>
<y0>626</y0>
<width>104</width>
<height>168</height>
<ID_maker>18</ID_maker>
<objectname>command</objectname>
<description></description>
<pin>
<ID>_P0</ID>
<x0>107</x0>
<y0>302</y0>
<width>60</width>
<height>30</height>
<text>compile()</text>
<px>1</px>
<py>36</py>
</pin>
<pin>
<ID>_P1</ID>
<x0>161</x0>
<y0>69</y0>
<width>60</width>
<height>30</height>
<text>clr()</text>
<px>2</px>
<py>57</py>
</pin>
<pin>
<ID>_P2</ID>
<x0>111</x0>
<y0>350</y0>
<width>74</width>
<height>29</height>
<text>assemble()</text>
<px>0</px>
<py>77</py>
</pin>
<pin>
<ID>_P3</ID>
<x0>138</x0>
<y0>205</y0>
<width>93</width>
<height>24</height>
<text>asm_edit()</text>
<px>0</px>
<py>94</py>
</pin>
<pin>
<ID>_P4</ID>
<x0>117</x0>
<y0>439</y0>
<width>85</width>
<height>25</height>
<text>fast_run()</text>
<px>0</px>
<py>113</py>
</pin>
<pin>
<ID>_P5</ID>
<x0>121</x0>
<y0>139</y0>
<width>60</width>
<height>30</height>
<text>edit()</text>
<px>0</px>
<py>135</py>
</pin>
<operation>
<ID>_O6</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>284</x0>
<y0>42</y0>
<width>155</width>
<height>49</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>30</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// レジスタ等のクリア


 address_field.setText(&quot;000000&quot;);
 c_field.setText(&quot;00&quot;);
 a_field.setText(&quot;000000&quot;);
 r_field.setText(&quot;000000&quot;);
 d_field.setText(&quot;00&quot;);
 clock_field.setText(&quot;0&quot;);
 message_area.setText(&quot;&quot;);
 disp.setText(&quot;&quot;);
</codetext>
</operation>
<relation>
<ID>_R7</ID>
<pin1name>_P1</pin1name>
<pin2name>_O6</pin2name>
</relation>
<operation>
<ID>_O8</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>320</x0>
<y0>134</y0>
<width>234</width>
<height>46</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>26</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>exec_command(edit_command);


</codetext>
</operation>
<relation>
<ID>_R9</ID>
<pin1name>_P5</pin1name>
<pin2name>_O8</pin2name>
</relation>
<operation>
<ID>_O10</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>318</x0>
<y0>213</y0>
<width>263</width>
<height>46</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>26</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>exec_command(asm_edit_command);


</codetext>
</operation>
<operation>
<ID>_O11</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>317</x0>
<y0>291</y0>
<width>234</width>
<height>46</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>26</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>exec_command(compile_command);


try{

BufferedReader din = new BufferedReader( new FileReader( &quot;r.out&quot; ) );

while(true){
  String line;
  int adrs,data;
  if((line=din.readLine()) == null )  break;
  adrs = Integer.parseInt(line);
  if((line=din.readLine()) == null )  break;
  data = Integer.parseInt(line);
  mem_c[adrs] = 24; // data命令
  mem_a[adrs] = 0;
  mem_r[adrs] = 0;
  mem_d[adrs] = data;
}

din.close();


} catch( IOException ie ){message_area.append(&quot;vm code load error!\n&quot;);}
</codetext>
</operation>
<operation>
<ID>_O12</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>317</x0>
<y0>363</y0>
<width>244</width>
<height>45</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>26</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>exec_command(assemble_command);


try{

BufferedReader din = new BufferedReader( new FileReader( &quot;a.out&quot; ) );

while(true){
  String line;
  int adrs,c,a,r,d;
  if((line=din.readLine()) == null )  break;
  adrs = Integer.parseInt(line);
  if((line=din.readLine()) == null )  break;
  c = Integer.parseInt(line);
  mem_c[adrs] = c;
  if((line=din.readLine()) == null )  break;
  a = Integer.parseInt(line);
  mem_a[adrs] = a;
  if((line=din.readLine()) == null )  break;
  r = Integer.parseInt(line);
  mem_r[adrs] = r;
  if((line=din.readLine()) == null )  break;
  d = Integer.parseInt(line);
  mem_d[adrs] = d;
}

din.close();


} catch( IOException ie ){message_area.append(&quot;native code load error!\n&quot;);}
</codetext>
</operation>
<operation>
<ID>_O13</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>316</x0>
<y0>441</y0>
<width>249</width>
<height>47</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>26</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>exec_command(fast_run_command);


</codetext>
</operation>
<relation>
<ID>_R14</ID>
<pin1name>_P3</pin1name>
<pin2name>_O10</pin2name>
</relation>
<relation>
<ID>_R15</ID>
<pin1name>_P0</pin1name>
<pin2name>_O11</pin2name>
</relation>
<relation>
<ID>_R16</ID>
<pin1name>_P2</pin1name>
<pin2name>_O12</pin2name>
</relation>
<relation>
<ID>_R17</ID>
<pin1name>_P4</pin1name>
<pin2name>_O13</pin2name>
</relation>
</xobject>
<relation>
<ID>_R82</ID>
<pin1name>_A0(_PAcompile_button)</pin1name>
<pin2name>_X79(_P0)</pin2name>
</relation>
<relation>
<ID>_R83</ID>
<pin1name>_A0(_PAclr_button)</pin1name>
<pin2name>_X79(_P1)</pin2name>
</relation>
<relation>
<ID>_R84</ID>
<pin1name>_A0(_PAasm_button)</pin1name>
<pin2name>_X79(_P2)</pin2name>
</relation>
<relation>
<ID>_R85</ID>
<pin1name>_A0(_PAasm_edit_button)</pin1name>
<pin2name>_X79(_P3)</pin2name>
</relation>
<relation>
<ID>_R87</ID>
<pin1name>_A0(_PAedit_button)</pin1name>
<pin2name>_X79(_P5)</pin2name>
</relation>
<operation>
<ID>_O88</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>420</x0>
<y0>742</y0>
<width>115</width>
<height>50</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(JTextField t)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>103</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>cmd_line = t;


cmd_line.getDocument().addDocumentListener(listener = new keyinput_listener());
</codetext>
</operation>
<relation>
<ID>_R89</ID>
<pin1name>_A0(_Pcmd_field)</pin1name>
<pin2name>_O88</pin2name>
</relation>
<operation>
<ID>_O90</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>665</x0>
<y0>777</y0>
<width>118</width>
<height>52</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(JTextArea t)</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>29</inpiny0>
<inpinwidth>103</inpinwidth>
<inpinheight>21</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>disp = t;
</codetext>
</operation>
<relation>
<ID>_R91</ID>
<pin1name>_A0(_Pdisp_area)</pin1name>
<pin2name>_O90</pin2name>
</relation>
<operation>
<ID>_O92</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>541</x0>
<y0>759</y0>
<width>115</width>
<height>50</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in(String s)</inpintext>
<inpinx0>1</inpinx0>
<inpiny0>31</inpiny0>
<inpinwidth>75</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>KeyCode = 10;
</codetext>
</operation>
<relation>
<ID>_R93</ID>
<pin1name>_A0(_PAcmd_field)</pin1name>
<pin2name>_O92</pin2name>
</relation>
<codeclip>
<ID>_C94</ID>
<x0>681</x0>
<y0>631</y0>
<width>294</width>
<height>40</height>
<codetext>keyinput_listener listener;
class keyinput_listener implements DocumentListener{

  String s;
  boolean allow = true;
  public void caretPositionChanged(InputMethodEvent e){}
  public void changedUpdate(DocumentEvent e){}//属性が変更されたときの処理
  public void insertUpdate(DocumentEvent e){
    KeyCode = 0;
    if(!is_gets){
      if( allow &amp;&amp; (s = cmd_line.getText()).length() &gt; 0 ){
        allow = false;
        KeyCode = (int)(byte)s.charAt(0);
        allow = true;
         }
      }
   }
  public void removeUpdate(DocumentEvent e){}//ドキュメントから削除されたときの処理

}
</codetext>
</codeclip>
<operation>
<ID>_O95</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>789</x0>
<y0>680</y0>
<width>172</width>
<height>50</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>40</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>40</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>0</inpinx0>
<inpiny0>30</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// メモリと周辺装置の同期 (メモリマップドIO)


if( KeyCode != 0 ) mem_d[KEY_CODE] = KeyCode;
KeyCode = 0;
cmd_line.setText(&quot;&quot;);
if( mem_d[PRT_STROBE] != 0 ){
  mem_d[PRT_STROBE] = 0;
  int c = mem_d[PRT_DATA];
  if( c == 12 ) disp.setText(&quot;&quot;);
  else disp.append(&quot;&quot;+(char)(byte)(c &amp; 0xff));
}
</codetext>
</operation>
<pin>
<ID>_P96</ID>
<x0>694</x0>
<y0>694</y0>
<width>67</width>
<height>25</height>
<text>io_sync()</text>
<px>10</px>
<py>40</py>
</pin>
<relation>
<ID>_R97</ID>
<pin1name>_P96</pin1name>
<pin2name>_O95</pin2name>
</relation>
<relation>
<ID>_R98</ID>
<pin1name>_A0(_Pio_flg)</pin1name>
<pin2name>_X19(_P65)</pin2name>
</relation>
<relation>
<ID>_R99</ID>
<pin1name>_A0(_PAaddr_reg)</pin1name>
<pin2name>_X42(_P0)</pin2name>
</relation>
<relation>
<ID>_R100</ID>
<pin1name>_A0(_Pstart)</pin1name>
<pin2name>_X19(_P16)</pin2name>
</relation>
<codeclip>
<ID>_C101</ID>
<x0>779</x0>
<y0>737</y0>
<width>184</width>
<height>34</height>
<codetext>//コマンドを実行して結果をコンソールに表示する
public void exec_command( String cmd ){

      Runtime runtime = Runtime.getRuntime();
      Process process;
      try {            //実行するコマンドを指定
        process = runtime.exec(cmd);
        new PrintThread(process.getInputStream()).start();
        new PrintThread(process.getErrorStream()).start();
        process.waitFor();
      } catch (Exception e) {}
    }


class PrintThread extends Thread{
  BufferedReader reader;
  PrintThread( InputStream s ){
    reader = new BufferedReader(new InputStreamReader(s));
  }
  
  public void run(){
    String line;
    try{
      while ((line = reader.readLine()) != null) message_area.append(line+&quot;\n&quot;);
      reader.close();
    } catch( IOException ie ){ }
  }
}
</codetext>
</codeclip>
<relation>
<ID>_R102</ID>
<pin1name>_A0(_PAfast_run_button)</pin1name>
<pin2name>_X79(_P4)</pin2name>
</relation>
<relation>
<ID>_R103</ID>
<pin1name>_A0(_PAclear_list)</pin1name>
<pin2name>_X6(_P41)</pin2name>
</relation>
<relation>
<ID>_R105</ID>
<pin1name>_A0(_Pbreak_field)</pin1name>
<pin2name>_X19(_P68)</pin2name>
</relation>
<relation>
<ID>_R109</ID>
<pin1name>_A0(_PAinifile_button)</pin1name>
<pin2name>_X19(_P71)</pin2name>
</relation>
<aobject>
<ID>_A0</ID>
<x0>124</x0>
<y0>0</y0>
<width>280</width>
<objectname>GUI</objectname>
<description>GUIオブジェクト
</description>
<state>
<ID>_SINIT</ID>
<x0>0</x0>
<y0>40</y0>
<width>70</width>
<height>40</height>
<text>  InitState</text>
<isinitstate>1</isinitstate>
</state>
<pin>
<ID>_Pstart</ID>
<x0>400</x0>
<y0>100</y0>
<width>80</width>
<height>26</height>
<text>Start()</text>
<px>0</px>
<py>36</py>
</pin>
<pin>
<ID>_PGUIout</ID>
<x0>0</x0>
<y0>84</y0>
<width>180</width>
<height>26</height>
<text>GUI_created(JFrame f)</text>
<px>0</px>
<py>54</py>
</pin>
<pin>
<ID>_PGUIclosed</ID>
<x0>310</x0>
<y0>0</y0>
<width>180</width>
<height>26</height>
<text>GUI_closed()</text>
<px>100</px>
<py>6</py>
</pin>
<action>
<ID>_Astart</ID>
<comp1name>_Pstart</comp1name>
<comp2name>_Ocreate</comp2name>
</action>
<operation>
<ID>_Ocreate</ID>
<state1>_SINIT</state1>
<state2>_SINIT</state2>
<x0>220</x0>
<y0>40</y0>
<width>130</width>
<height>64</height>
<inconnectx0>0</inconnectx0>
<inconnecty0>30</inconnecty0>
<outconnectx0>0</outconnectx0>
<outconnecty0>30</outconnecty0>
<inpintext>in()</inpintext>
<inpinx0>90</inpinx0>
<inpiny0>43</inpiny0>
<inpinwidth>40</inpinwidth>
<inpinheight>20</inpinheight>
<outpintext>out()</outpintext>
<outpinx0>90</outpinx0>
<outpiny0>40</outpiny0>
<outpinwidth>40</outpinwidth>
<outpinheight>20</outpinheight>
<inpinlinkcount>1</inpinlinkcount>
<description></description>
<codetext>// GUIを作成する
XGUI x = new XGUI();

</codetext>
</operation>
<pin>
<ID>_PAsingle_button</ID>
<x0>0</x0>
<y0>110</y0>
<width>200</width>
<height>26</height>
<text>single_button_clicked()</text>
<px>0</px>
<py>72</py>
</pin>
<pin>
<ID>_PAclear_list</ID>
<x0>0</x0>
<y0>138</y0>
<width>200</width>
<height>26</height>
<text>clear_list_clicked()</text>
<px>0</px>
<py>90</py>
</pin>
<pin>
<ID>_PAadd_list</ID>
<x0>0</x0>
<y0>166</y0>
<width>200</width>
<height>26</height>
<text>add_list_clicked()</text>
<px>0</px>
<py>108</py>
</pin>
<pin>
<ID>_PAdel_list</ID>
<x0>0</x0>
<y0>194</y0>
<width>200</width>
<height>26</height>
<text>del_list_clicked()</text>
<px>0</px>
<py>126</py>
</pin>
<pin>
<ID>_PAhome_list</ID>
<x0>0</x0>
<y0>222</y0>
<width>200</width>
<height>26</height>
<text>home_list_clicked()</text>
<px>0</px>
<py>144</py>
</pin>
<pin>
<ID>_PAinc_list</ID>
<x0>0</x0>
<y0>250</y0>
<width>200</width>
<height>26</height>
<text>inc_list_clicked()</text>
<px>0</px>
<py>162</py>
</pin>
<pin>
<ID>_PAdec_list</ID>
<x0>0</x0>
<y0>278</y0>
<width>200</width>
<height>26</height>
<text>dec_list_clicked()</text>
<px>0</px>
<py>180</py>
</pin>
<pin>
<ID>_Prun_button</ID>
<x0>0</x0>
<y0>306</y0>
<width>200</width>
<height>26</height>
<text>run_button_created(JButton b)</text>
<px>0</px>
<py>198</py>
</pin>
<pin>
<ID>_PArun_button</ID>
<x0>0</x0>
<y0>334</y0>
<width>200</width>
<height>26</height>
<text>run_button_clicked()</text>
<px>0</px>
<py>216</py>
</pin>
<pin>
<ID>_PAinc_addr</ID>
<x0>0</x0>
<y0>362</y0>
<width>200</width>
<height>26</height>
<text>inc_addr_clicked()</text>
<px>0</px>
<py>234</py>
</pin>
<pin>
<ID>_PAdec_addr</ID>
<x0>0</x0>
<y0>390</y0>
<width>200</width>
<height>26</height>
<text>dec_addr_clicked()</text>
<px>0</px>
<py>252</py>
</pin>
<pin>
<ID>_PAmem_set</ID>
<x0>0</x0>
<y0>418</y0>
<width>200</width>
<height>26</height>
<text>mem_set_clicked()</text>
<px>0</px>
<py>270</py>
</pin>
<pin>
<ID>_PAinifile_button</ID>
<x0>0</x0>
<y0>446</y0>
<width>200</width>
<height>26</height>
<text>inifile_button_clicked()</text>
<px>0</px>
<py>288</py>
</pin>
<pin>
<ID>_Paddr_reg</ID>
<x0>0</x0>
<y0>474</y0>
<width>200</width>
<height>26</height>
<text>addr_reg_created(JTextField t)</text>
<px>0</px>
<py>306</py>
</pin>
<pin>
<ID>_PAaddr_reg</ID>
<x0>0</x0>
<y0>502</y0>
<width>200</width>
<height>26</height>
<text>addr_reg_input(String s)</text>
<px>0</px>
<py>324</py>
</pin>
<pin>
<ID>_Pc_reg</ID>
<x0>0</x0>
<y0>530</y0>
<width>200</width>
<height>26</height>
<text>c_reg_created(JTextField t)</text>
<px>0</px>
<py>342</py>
</pin>
<pin>
<ID>_Pa_reg</ID>
<x0>0</x0>
<y0>558</y0>
<width>200</width>
<height>26</height>
<text>a_reg_created(JTextField t)</text>
<px>0</px>
<py>360</py>
</pin>
<pin>
<ID>_Pr_reg</ID>
<x0>0</x0>
<y0>586</y0>
<width>200</width>
<height>26</height>
<text>r_reg_created(JTextField t)</text>
<px>0</px>
<py>378</py>
</pin>
<pin>
<ID>_Pd_reg</ID>
<x0>0</x0>
<y0>614</y0>
<width>200</width>
<height>26</height>
<text>d_reg_created(JTextField t)</text>
<px>0</px>
<py>396</py>
</pin>
<pin>
<ID>_Pio_flg</ID>
<x0>0</x0>
<y0>642</y0>
<width>200</width>
<height>26</height>
<text>io_flg_created(JLabel l)</text>
<px>0</px>
<py>414</py>
</pin>
<pin>
<ID>_Ppointer_flg</ID>
<x0>0</x0>
<y0>670</y0>
<width>200</width>
<height>26</height>
<text>pointer_flg_created(JLabel l)</text>
<px>0</px>
<py>432</py>
</pin>
<pin>
<ID>_Preturn_flg</ID>
<x0>0</x0>
<y0>698</y0>
<width>200</width>
<height>26</height>
<text>return_flg_created(JLabel l)</text>
<px>0</px>
<py>450</py>
</pin>
<pin>
<ID>_Pstore_flg</ID>
<x0>0</x0>
<y0>726</y0>
<width>200</width>
<height>26</height>
<text>store_flg_created(JLabel l)</text>
<px>0</px>
<py>468</py>
</pin>
<pin>
<ID>_Pld_flg</ID>
<x0>0</x0>
<y0>754</y0>
<width>200</width>
<height>26</height>
<text>ld_flg_created(JLabel l)</text>
<px>0</px>
<py>486</py>
</pin>
<pin>
<ID>_Pldh_flg</ID>
<x0>0</x0>
<y0>782</y0>
<width>200</width>
<height>26</height>
<text>ldh_flg_created(JLabel l)</text>
<px>0</px>
<py>504</py>
</pin>
<pin>
<ID>_Pldm_flg</ID>
<x0>0</x0>
<y0>810</y0>
<width>200</width>
<height>26</height>
<text>ldm_flg_created(JLabel l)</text>
<px>0</px>
<py>522</py>
</pin>
<pin>
<ID>_Pldl_flg</ID>
<x0>0</x0>
<y0>838</y0>
<width>200</width>
<height>26</height>
<text>ldl_flg_created(JLabel l)</text>
<px>0</px>
<py>540</py>
</pin>
<pin>
<ID>_Pmessage_area</ID>
<x0>0</x0>
<y0>866</y0>
<width>200</width>
<height>26</height>
<text>message_area_created(JTextArea t)</text>
<px>0</px>
<py>558</py>
</pin>
<pin>
<ID>_Pclock_field</ID>
<x0>0</x0>
<y0>894</y0>
<width>200</width>
<height>26</height>
<text>clock_field_created(JTextField t)</text>
<px>0</px>
<py>576</py>
</pin>
<pin>
<ID>_Pname_field</ID>
<x0>0</x0>
<y0>922</y0>
<width>200</width>
<height>26</height>
<text>name_field_created(JTextField t)</text>
<px>0</px>
<py>594</py>
</pin>
<pin>
<ID>_Pstart_field</ID>
<x0>0</x0>
<y0>950</y0>
<width>200</width>
<height>26</height>
<text>start_field_created(JTextField t)</text>
<px>0</px>
<py>612</py>
</pin>
<pin>
<ID>_Pend_field</ID>
<x0>0</x0>
<y0>978</y0>
<width>200</width>
<height>26</height>
<text>end_field_created(JTextField t)</text>
<px>0</px>
<py>630</py>
</pin>
<pin>
<ID>_Pinterval_field</ID>
<x0>0</x0>
<y0>1006</y0>
<width>200</width>
<height>26</height>
<text>interval_field_created(JTextField t)</text>
<px>0</px>
<py>648</py>
</pin>
<pin>
<ID>_Pbreak_field</ID>
<x0>0</x0>
<y0>1034</y0>
<width>200</width>
<height>26</height>
<text>break_field_created(JTextField t)</text>
<px>0</px>
<py>666</py>
</pin>
<pin>
<ID>_PAcompile_button</ID>
<x0>0</x0>
<y0>1062</y0>
<width>200</width>
<height>26</height>
<text>compile_button_clicked()</text>
<px>0</px>
<py>684</py>
</pin>
<pin>
<ID>_PAclr_button</ID>
<x0>0</x0>
<y0>1090</y0>
<width>200</width>
<height>26</height>
<text>clr_button_clicked()</text>
<px>0</px>
<py>702</py>
</pin>
<pin>
<ID>_PAasm_button</ID>
<x0>0</x0>
<y0>1118</y0>
<width>200</width>
<height>26</height>
<text>asm_button_clicked()</text>
<px>0</px>
<py>720</py>
</pin>
<pin>
<ID>_PAasm_edit_button</ID>
<x0>0</x0>
<y0>1146</y0>
<width>200</width>
<height>26</height>
<text>asm_edit_button_clicked()</text>
<px>0</px>
<py>738</py>
</pin>
<pin>
<ID>_PAfast_run_button</ID>
<x0>0</x0>
<y0>1174</y0>
<width>200</width>
<height>26</height>
<text>fast_run_button_clicked()</text>
<px>0</px>
<py>756</py>
</pin>
<pin>
<ID>_PAedit_button</ID>
<x0>0</x0>
<y0>1202</y0>
<width>200</width>
<height>26</height>
<text>edit_button_clicked()</text>
<px>0</px>
<py>774</py>
</pin>
<pin>
<ID>_Pcmd_field</ID>
<x0>0</x0>
<y0>1230</y0>
<width>200</width>
<height>26</height>
<text>cmd_field_created(JTextField t)</text>
<px>0</px>
<py>792</py>
</pin>
<pin>
<ID>_PAcmd_field</ID>
<x0>0</x0>
<y0>1258</y0>
<width>200</width>
<height>26</height>
<text>cmd_field_input(String s)</text>
<px>0</px>
<py>810</py>
</pin>
<pin>
<ID>_Pdisp_area</ID>
<x0>0</x0>
<y0>1286</y0>
<width>200</width>
<height>26</height>
<text>disp_area_created(JTextArea t)</text>
<px>0</px>
<py>828</py>
</pin>
<codeclip>
<ID>_CXSTART</ID>
<x0>0</x0>
<y0>0</y0>
<width>300</width>
<height>26</height>
<codetext> class XGUI extends JFrame implements WindowListener{
 JPanel cnt;
single_button Isingle_button;
 class single_button extends JButton implements ActionListener{
  single_button(){
 setOpaque( true );
 setName(  &quot;single_button&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 12 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  192, 192, 192 ));
 setHorizontalAlignment( 0 );
 setVerticalAlignment( 0 );
 setText( &quot;1step&quot; );
 addActionListener( this );
}
 public void actionPerformed( ActionEvent e ){ single_button_clicked(); }
}
clear_list Iclear_list;
 class clear_list extends JButton implements ActionListener{
  clear_list(){
 setOpaque( true );
 setName(  &quot;clear_list&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 9 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  192, 192, 192 ));
 setHorizontalAlignment( 0 );
 setVerticalAlignment( 0 );
 setText( &quot;C&quot; );
 addActionListener( this );
}
 public void actionPerformed( ActionEvent e ){ clear_list_clicked(); }
}
add_list Iadd_list;
 class add_list extends JButton implements ActionListener{
  add_list(){
 setOpaque( true );
 setName(  &quot;add_list&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 9 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  192, 192, 192 ));
 setHorizontalAlignment( 0 );
 setVerticalAlignment( 0 );
 setText( &quot;ADD&quot; );
 addActionListener( this );
}
 public void actionPerformed( ActionEvent e ){ add_list_clicked(); }
}
del_list Idel_list;
 class del_list extends JButton implements ActionListener{
  del_list(){
 setOpaque( true );
 setName(  &quot;del_list&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 9 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  192, 192, 192 ));
 setHorizontalAlignment( 0 );
 setVerticalAlignment( 0 );
 setText( &quot;DEL&quot; );
 addActionListener( this );
}
 public void actionPerformed( ActionEvent e ){ del_list_clicked(); }
}
home_list Ihome_list;
 class home_list extends JButton implements ActionListener{
  home_list(){
 setOpaque( true );
 setName(  &quot;home_list&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 9 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  192, 192, 192 ));
 setHorizontalAlignment( 0 );
 setVerticalAlignment( 0 );
 setText( &quot;0&quot; );
 addActionListener( this );
}
 public void actionPerformed( ActionEvent e ){ home_list_clicked(); }
}
inc_list Iinc_list;
 class inc_list extends JButton implements ActionListener{
  inc_list(){
 setOpaque( true );
 setName(  &quot;inc_list&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 9 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  192, 192, 192 ));
 setHorizontalAlignment( 0 );
 setVerticalAlignment( 0 );
 setText( &quot;&gt;&quot; );
 addActionListener( this );
}
 public void actionPerformed( ActionEvent e ){ inc_list_clicked(); }
}
dec_list Idec_list;
 class dec_list extends JButton implements ActionListener{
  dec_list(){
 setOpaque( true );
 setName(  &quot;dec_list&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 9 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  192, 192, 192 ));
 setHorizontalAlignment( 0 );
 setVerticalAlignment( 0 );
 setText( &quot;&lt;&quot; );
 addActionListener( this );
}
 public void actionPerformed( ActionEvent e ){ dec_list_clicked(); }
}
run_button Irun_button;
 class run_button extends JButton implements ActionListener{
  run_button(){
 setOpaque( true );
 setName(  &quot;run_button&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 12 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  192, 192, 192 ));
 setHorizontalAlignment( 0 );
 setVerticalAlignment( 0 );
 setText( &quot;run&quot; );
 addActionListener( this );
 run_button_created( this );
}
 public void actionPerformed( ActionEvent e ){ run_button_clicked(); }
}
inc_addr Iinc_addr;
 class inc_addr extends JButton implements ActionListener{
  inc_addr(){
 setOpaque( true );
 setName(  &quot;inc_addr&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 12 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  192, 192, 192 ));
 setHorizontalAlignment( 0 );
 setVerticalAlignment( 0 );
 setText( &quot;+&quot; );
 addActionListener( this );
}
 public void actionPerformed( ActionEvent e ){ inc_addr_clicked(); }
}
dec_addr Idec_addr;
 class dec_addr extends JButton implements ActionListener{
  dec_addr(){
 setOpaque( true );
 setName(  &quot;dec_addr&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 12 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  192, 192, 192 ));
 setHorizontalAlignment( 0 );
 setVerticalAlignment( 0 );
 setText( &quot;-&quot; );
 addActionListener( this );
}
 public void actionPerformed( ActionEvent e ){ dec_addr_clicked(); }
}
mem_set Imem_set;
 class mem_set extends JButton implements ActionListener{
  mem_set(){
 setOpaque( true );
 setName(  &quot;mem_set&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 12 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  192, 192, 192 ));
 setHorizontalAlignment( 0 );
 setVerticalAlignment( 0 );
 setText( &quot;WRT&quot; );
 addActionListener( this );
}
 public void actionPerformed( ActionEvent e ){ mem_set_clicked(); }
}
inifile_button Iinifile_button;
 class inifile_button extends JButton implements ActionListener{
  inifile_button(){
 setOpaque( true );
 setName(  &quot;inifile_button&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 12 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  192, 192, 192 ));
 setHorizontalAlignment( 0 );
 setVerticalAlignment( 0 );
 setText( &quot;Select .ini File&quot; );
 addActionListener( this );
}
 public void actionPerformed( ActionEvent e ){ inifile_button_clicked(); }
}
addr_reg Iaddr_reg;
 class addr_reg extends JTextField implements ActionListener{
  addr_reg(){
 setOpaque( true );
 setName(  &quot;addr_reg&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 10 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  255, 255, 255 ));
 setText( &quot;000000&quot; );
 addActionListener( this );
 addr_reg_created( this );
}
 public void actionPerformed( ActionEvent e ){ addr_reg_input( getText() ); }
}
c_reg Ic_reg;
 class c_reg extends JTextField{
  c_reg(){
 setOpaque( true );
 setName(  &quot;c_reg&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 10 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  255, 255, 255 ));
 setText( &quot;00&quot; );
 c_reg_created( this );
}
}
a_reg Ia_reg;
 class a_reg extends JTextField{
  a_reg(){
 setOpaque( true );
 setName(  &quot;a_reg&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 10 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  255, 255, 255 ));
 setText( &quot;000000&quot; );
 a_reg_created( this );
}
}
r_reg Ir_reg;
 class r_reg extends JTextField{
  r_reg(){
 setOpaque( true );
 setName(  &quot;r_reg&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 10 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  255, 255, 255 ));
 setText( &quot;000000&quot; );
 r_reg_created( this );
}
}
d_reg Id_reg;
 class d_reg extends JTextField{
  d_reg(){
 setOpaque( true );
 setName(  &quot;d_reg&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 10 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  255, 255, 255 ));
 setText( &quot;00&quot; );
 d_reg_created( this );
}
}
io_flg Iio_flg;
 class io_flg extends JLabel{
  io_flg(){
 setOpaque( true );
 setName(  &quot;io_flg&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 11 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  192, 192, 192 ));
 setHorizontalAlignment( 0 );
 setVerticalAlignment( 0 );
 setText( &quot;IO&quot; );
 io_flg_created( this );
}
}
pointer_flg Ipointer_flg;
 class pointer_flg extends JLabel{
  pointer_flg(){
 setOpaque( true );
 setName(  &quot;pointer_flg&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 11 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  192, 192, 192 ));
 setHorizontalAlignment( 0 );
 setVerticalAlignment( 0 );
 setText( &quot;POINTER&quot; );
 pointer_flg_created( this );
}
}
return_flg Ireturn_flg;
 class return_flg extends JLabel{
  return_flg(){
 setOpaque( true );
 setName(  &quot;return_flg&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 11 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  192, 192, 192 ));
 setHorizontalAlignment( 0 );
 setVerticalAlignment( 0 );
 setText( &quot;RET&quot; );
 return_flg_created( this );
}
}
store_flg Istore_flg;
 class store_flg extends JLabel{
  store_flg(){
 setOpaque( true );
 setName(  &quot;store_flg&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 12 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  192, 192, 192 ));
 setHorizontalAlignment( 0 );
 setVerticalAlignment( 0 );
 setText( &quot;ST&quot; );
 store_flg_created( this );
}
}
ld_flg Ild_flg;
 class ld_flg extends JLabel{
  ld_flg(){
 setOpaque( true );
 setName(  &quot;ld_flg&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 11 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  192, 192, 192 ));
 setHorizontalAlignment( 0 );
 setVerticalAlignment( 0 );
 setText( &quot;LD&quot; );
 ld_flg_created( this );
}
}
ldh_flg Ildh_flg;
 class ldh_flg extends JLabel{
  ldh_flg(){
 setOpaque( true );
 setName(  &quot;ldh_flg&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 11 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  192, 192, 192 ));
 setHorizontalAlignment( 0 );
 setVerticalAlignment( 0 );
 setText( &quot;LDH&quot; );
 ldh_flg_created( this );
}
}
ldm_flg Ildm_flg;
 class ldm_flg extends JLabel{
  ldm_flg(){
 setOpaque( true );
 setName(  &quot;ldm_flg&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 11 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  192, 192, 192 ));
 setHorizontalAlignment( 0 );
 setVerticalAlignment( 0 );
 setText( &quot;LDM&quot; );
 ldm_flg_created( this );
}
}
ldl_flg Ildl_flg;
 class ldl_flg extends JLabel{
  ldl_flg(){
 setOpaque( true );
 setName(  &quot;ldl_flg&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 11 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  192, 192, 192 ));
 setHorizontalAlignment( 0 );
 setVerticalAlignment( 0 );
 setText( &quot;LDL&quot; );
 ldl_flg_created( this );
}
}
message_area Imessage_area;
 class message_area extends JTextArea{
 JScrollPane scrl;
  message_area(){
 setOpaque( true );
 setName(  &quot;message_area&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 12 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  255, 255, 255 ));
 setText( &quot;&quot; );
 scrl = new JScrollPane( this );
 message_area_created( this );
}
}
LABEL24 ILABEL24;
 class LABEL24 extends JLabel{
  LABEL24(){
 setOpaque( true );
 setName(  &quot;LABEL24&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 12 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  192, 192, 192 ));
 setHorizontalAlignment( 2 );
 setVerticalAlignment( 0 );
 setText( &quot;CYCLE:&quot; );
}
}
clock_field Iclock_field;
 class clock_field extends JTextField{
  clock_field(){
 setOpaque( true );
 setName(  &quot;clock_field&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 12 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  255, 255, 255 ));
 setText( &quot;0&quot; );
 clock_field_created( this );
}
}
LABEL27 ILABEL27;
 class LABEL27 extends JLabel{
  LABEL27(){
 setOpaque( true );
 setName(  &quot;LABEL27&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 12 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  192, 192, 192 ));
 setHorizontalAlignment( 0 );
 setVerticalAlignment( 0 );
 setText( &quot;Name&quot; );
}
}
LABEL28 ILABEL28;
 class LABEL28 extends JLabel{
  LABEL28(){
 setOpaque( true );
 setName(  &quot;LABEL28&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 12 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  192, 192, 192 ));
 setHorizontalAlignment( 0 );
 setVerticalAlignment( 0 );
 setText( &quot;Start&quot; );
}
}
LABEL29 ILABEL29;
 class LABEL29 extends JLabel{
  LABEL29(){
 setOpaque( true );
 setName(  &quot;LABEL29&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 12 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  192, 192, 192 ));
 setHorizontalAlignment( 0 );
 setVerticalAlignment( 0 );
 setText( &quot;End&quot; );
}
}
name_field Iname_field;
 class name_field extends JTextField{
  name_field(){
 setOpaque( true );
 setName(  &quot;name_field&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 10 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  255, 255, 255 ));
 setText( &quot;&quot; );
 name_field_created( this );
}
}
start_field Istart_field;
 class start_field extends JTextField{
  start_field(){
 setOpaque( true );
 setName(  &quot;start_field&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 10 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  255, 255, 255 ));
 setText( &quot;0&quot; );
 start_field_created( this );
}
}
end_field Iend_field;
 class end_field extends JTextField{
  end_field(){
 setOpaque( true );
 setName(  &quot;end_field&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 10 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  255, 255, 255 ));
 setText( &quot;0&quot; );
 end_field_created( this );
}
}
interval_field Iinterval_field;
 class interval_field extends JTextField{
  interval_field(){
 setOpaque( true );
 setName(  &quot;interval_field&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 10 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  255, 255, 255 ));
 setText( &quot;1&quot; );
 interval_field_created( this );
}
}
break_field Ibreak_field;
 class break_field extends JTextField{
  break_field(){
 setOpaque( true );
 setName(  &quot;break_field&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 10 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  255, 255, 255 ));
 setText( &quot;0&quot; );
 break_field_created( this );
}
}
LABEL33 ILABEL33;
 class LABEL33 extends JLabel{
  LABEL33(){
 setOpaque( true );
 setName(  &quot;LABEL33&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 12 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  192, 192, 192 ));
 setHorizontalAlignment( 0 );
 setVerticalAlignment( 0 );
 setText( &quot;interval time&quot; );
}
}
LABEL34 ILABEL34;
 class LABEL34 extends JLabel{
  LABEL34(){
 setOpaque( true );
 setName(  &quot;LABEL34&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 12 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  192, 192, 192 ));
 setHorizontalAlignment( 0 );
 setVerticalAlignment( 0 );
 setText( &quot;ms&quot; );
}
}
LABEL36 ILABEL36;
 class LABEL36 extends JLabel{
  LABEL36(){
 setOpaque( true );
 setName(  &quot;LABEL36&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 12 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  192, 192, 192 ));
 setHorizontalAlignment( 0 );
 setVerticalAlignment( 0 );
 setText( &quot;ADDR:&quot; );
}
}
LABEL35 ILABEL35;
 class LABEL35 extends JLabel{
  LABEL35(){
 setOpaque( true );
 setName(  &quot;LABEL35&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 12 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  192, 192, 192 ));
 setHorizontalAlignment( 0 );
 setVerticalAlignment( 0 );
 setText( &quot;D:&quot; );
}
}
compile_button Icompile_button;
 class compile_button extends JButton implements ActionListener{
  compile_button(){
 setOpaque( true );
 setName(  &quot;compile_button&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 12 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  192, 192, 192 ));
 setHorizontalAlignment( 0 );
 setVerticalAlignment( 0 );
 setText( &quot;Compile&quot; );
 addActionListener( this );
}
 public void actionPerformed( ActionEvent e ){ compile_button_clicked(); }
}
clr_button Iclr_button;
 class clr_button extends JButton implements ActionListener{
  clr_button(){
 setOpaque( true );
 setName(  &quot;clr_button&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 10 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  192, 192, 192 ));
 setHorizontalAlignment( 0 );
 setVerticalAlignment( 0 );
 setText( &quot;CLR&quot; );
 addActionListener( this );
}
 public void actionPerformed( ActionEvent e ){ clr_button_clicked(); }
}
asm_button Iasm_button;
 class asm_button extends JButton implements ActionListener{
  asm_button(){
 setOpaque( true );
 setName(  &quot;asm_button&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 12 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  192, 192, 192 ));
 setHorizontalAlignment( 0 );
 setVerticalAlignment( 0 );
 setText( &quot;assemble&quot; );
 addActionListener( this );
}
 public void actionPerformed( ActionEvent e ){ asm_button_clicked(); }
}
asm_edit_button Iasm_edit_button;
 class asm_edit_button extends JButton implements ActionListener{
  asm_edit_button(){
 setOpaque( true );
 setName(  &quot;asm_edit_button&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 12 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  192, 192, 192 ));
 setHorizontalAlignment( 0 );
 setVerticalAlignment( 0 );
 setText( &quot;asm edit&quot; );
 addActionListener( this );
}
 public void actionPerformed( ActionEvent e ){ asm_edit_button_clicked(); }
}
fast_run_button Ifast_run_button;
 class fast_run_button extends JButton implements ActionListener{
  fast_run_button(){
 setOpaque( true );
 setName(  &quot;fast_run_button&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 12 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  192, 192, 192 ));
 setHorizontalAlignment( 0 );
 setVerticalAlignment( 0 );
 setText( &quot;Fast run&quot; );
 addActionListener( this );
}
 public void actionPerformed( ActionEvent e ){ fast_run_button_clicked(); }
}
LABEL2 ILABEL2;
 class LABEL2 extends JLabel{
  LABEL2(){
 setOpaque( true );
 setName(  &quot;LABEL2&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 12 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  192, 192, 192 ));
 setHorizontalAlignment( 0 );
 setVerticalAlignment( 0 );
 setText( &quot;R:&quot; );
}
}
LABEL3 ILABEL3;
 class LABEL3 extends JLabel{
  LABEL3(){
 setOpaque( true );
 setName(  &quot;LABEL3&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 12 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  192, 192, 192 ));
 setHorizontalAlignment( 0 );
 setVerticalAlignment( 0 );
 setText( &quot;A:&quot; );
}
}
LABEL4 ILABEL4;
 class LABEL4 extends JLabel{
  LABEL4(){
 setOpaque( true );
 setName(  &quot;LABEL4&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 12 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  192, 192, 192 ));
 setHorizontalAlignment( 0 );
 setVerticalAlignment( 0 );
 setText( &quot;C:&quot; );
}
}
edit_button Iedit_button;
 class edit_button extends JButton implements ActionListener{
  edit_button(){
 setOpaque( true );
 setName(  &quot;edit_button&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 12 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  192, 192, 192 ));
 setHorizontalAlignment( 0 );
 setVerticalAlignment( 0 );
 setText( &quot;edit&quot; );
 addActionListener( this );
}
 public void actionPerformed( ActionEvent e ){ edit_button_clicked(); }
}
cmd_field Icmd_field;
 class cmd_field extends JTextField implements ActionListener{
  cmd_field(){
 setOpaque( true );
 setName(  &quot;cmd_field&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 12 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  255, 255, 255 ));
 setText( &quot;&quot; );
 addActionListener( this );
 cmd_field_created( this );
}
 public void actionPerformed( ActionEvent e ){ cmd_field_input( getText() ); }
}
LABEL42 ILABEL42;
 class LABEL42 extends JLabel{
  LABEL42(){
 setOpaque( true );
 setName(  &quot;LABEL42&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 12 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  192, 192, 192 ));
 setHorizontalAlignment( 0 );
 setVerticalAlignment( 0 );
 setText( &quot;Command:&quot; );
}
}
disp_area Idisp_area;
 class disp_area extends JTextArea{
 JScrollPane scrl;
  disp_area(){
 setOpaque( true );
 setName(  &quot;disp_area&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 20 ));
 setForeground( new Color(  29, 255, 32 ));
 setBackground( new Color(  1, 1, 1 ));
 setText( &quot;&quot; );
 scrl = new JScrollPane( this );
 disp_area_created( this );
}
}
LABEL50 ILABEL50;
 class LABEL50 extends JLabel{
  LABEL50(){
 setOpaque( true );
 setName(  &quot;LABEL50&quot; );
 setFont( new Font( &quot;Dialog&quot;, 0, 12 ));
 setForeground( new Color(  51, 51, 51 ));
 setBackground( new Color(  192, 192, 192 ));
 setHorizontalAlignment( 0 );
 setVerticalAlignment( 0 );
 setText( &quot;Break address&quot; );
}
}
 XGUI(){
 setTitle(&quot;CARD8シミュレータ&quot;);
 cnt = new JPanel( new BorderLayout() );
 cnt.setPreferredSize(  new  Dimension( 923, 615 ) );
 ((Component)cnt).setBackground( new Color( 252, 243, 83 ) );
 Isingle_button = new single_button();
 cnt.add( Isingle_button, 0 );
 cnt.getLayout().removeLayoutComponent( Isingle_button );
 Isingle_button.setBounds( 63, 112, 47, 44 );
 Iclear_list = new clear_list();
 cnt.add( Iclear_list, 0 );
 cnt.getLayout().removeLayoutComponent( Iclear_list );
 Iclear_list.setBounds( 317, 58, 21, 24 );
 Iadd_list = new add_list();
 cnt.add( Iadd_list, 0 );
 cnt.getLayout().removeLayoutComponent( Iadd_list );
 Iadd_list.setBounds( 341, 59, 31, 23 );
 Idel_list = new del_list();
 cnt.add( Idel_list, 0 );
 cnt.getLayout().removeLayoutComponent( Idel_list );
 Idel_list.setBounds( 374, 59, 31, 23 );
 Ihome_list = new home_list();
 cnt.add( Ihome_list, 0 );
 cnt.getLayout().removeLayoutComponent( Ihome_list );
 Ihome_list.setBounds( 317, 85, 22, 23 );
 Iinc_list = new inc_list();
 cnt.add( Iinc_list, 0 );
 cnt.getLayout().removeLayoutComponent( Iinc_list );
 Iinc_list.setBounds( 375, 85, 30, 23 );
 Idec_list = new dec_list();
 cnt.add( Idec_list, 0 );
 cnt.getLayout().removeLayoutComponent( Idec_list );
 Idec_list.setBounds( 343, 85, 29, 23 );
 Irun_button = new run_button();
 cnt.add( Irun_button, 0 );
 cnt.getLayout().removeLayoutComponent( Irun_button );
 Irun_button.setBounds( 292, 2, 44, 27 );
 Iinc_addr = new inc_addr();
 cnt.add( Iinc_addr, 0 );
 cnt.getLayout().removeLayoutComponent( Iinc_addr );
 Iinc_addr.setBounds( 241, 59, 28, 23 );
 Idec_addr = new dec_addr();
 cnt.add( Idec_addr, 0 );
 cnt.getLayout().removeLayoutComponent( Idec_addr );
 Idec_addr.setBounds( 241, 85, 28, 23 );
 Imem_set = new mem_set();
 cnt.add( Imem_set, 0 );
 cnt.getLayout().removeLayoutComponent( Imem_set );
 Imem_set.setBounds( 272, 59, 42, 49 );
 Iinifile_button = new inifile_button();
 cnt.add( Iinifile_button, 0 );
 cnt.getLayout().removeLayoutComponent( Iinifile_button );
 Iinifile_button.setBounds( 772, 3, 144, 29 );
 Iaddr_reg = new addr_reg();
 cnt.add( Iaddr_reg, 0 );
 cnt.getLayout().removeLayoutComponent( Iaddr_reg );
 Iaddr_reg.setBounds( 2, 86, 57, 24 );
 Ic_reg = new c_reg();
 cnt.add( Ic_reg, 0 );
 cnt.getLayout().removeLayoutComponent( Ic_reg );
 Ic_reg.setBounds( 61, 86, 29, 24 );
 Ia_reg = new a_reg();
 cnt.add( Ia_reg, 0 );
 cnt.getLayout().removeLayoutComponent( Ia_reg );
 Ia_reg.setBounds( 91, 86, 56, 24 );
 Ir_reg = new r_reg();
 cnt.add( Ir_reg, 0 );
 cnt.getLayout().removeLayoutComponent( Ir_reg );
 Ir_reg.setBounds( 148, 86, 56, 24 );
 Id_reg = new d_reg();
 cnt.add( Id_reg, 0 );
 cnt.getLayout().removeLayoutComponent( Id_reg );
 Id_reg.setBounds( 206, 85, 33, 25 );
 Iio_flg = new io_flg();
 cnt.add( Iio_flg, 0 );
 cnt.getLayout().removeLayoutComponent( Iio_flg );
 Iio_flg.setBounds( 3, 33, 33, 22 );
 Ipointer_flg = new pointer_flg();
 cnt.add( Ipointer_flg, 0 );
 cnt.getLayout().removeLayoutComponent( Ipointer_flg );
 Ipointer_flg.setBounds( 42, 33, 67, 23 );
 Ireturn_flg = new return_flg();
 cnt.add( Ireturn_flg, 0 );
 cnt.getLayout().removeLayoutComponent( Ireturn_flg );
 Ireturn_flg.setBounds( 116, 34, 41, 22 );
 Istore_flg = new store_flg();
 cnt.add( Istore_flg, 0 );
 cnt.getLayout().removeLayoutComponent( Istore_flg );
 Istore_flg.setBounds( 164, 34, 37, 21 );
 Ild_flg = new ld_flg();
 cnt.add( Ild_flg, 0 );
 cnt.getLayout().removeLayoutComponent( Ild_flg );
 Ild_flg.setBounds( 207, 34, 37, 21 );
 Ildh_flg = new ldh_flg();
 cnt.add( Ildh_flg, 0 );
 cnt.getLayout().removeLayoutComponent( Ildh_flg );
 Ildh_flg.setBounds( 249, 34, 46, 21 );
 Ildm_flg = new ldm_flg();
 cnt.add( Ildm_flg, 0 );
 cnt.getLayout().removeLayoutComponent( Ildm_flg );
 Ildm_flg.setBounds( 300, 34, 49, 21 );
 Ildl_flg = new ldl_flg();
 cnt.add( Ildl_flg, 0 );
 cnt.getLayout().removeLayoutComponent( Ildl_flg );
 Ildl_flg.setBounds( 354, 34, 50, 21 );
 Imessage_area = new message_area();
 cnt.add( Imessage_area.scrl, 0 );
 cnt.getLayout().removeLayoutComponent( Imessage_area.scrl );
 (  Imessage_area.scrl ).setBounds( 1, 183, 404, 426 );
 ILABEL24 = new LABEL24();
 cnt.add( ILABEL24, 0 );
 cnt.getLayout().removeLayoutComponent( ILABEL24 );
 ILABEL24.setBounds( 2, 111, 59, 22 );
 Iclock_field = new clock_field();
 cnt.add( Iclock_field, 0 );
 cnt.getLayout().removeLayoutComponent( Iclock_field );
 Iclock_field.setBounds( 3, 135, 56, 22 );
 ILABEL27 = new LABEL27();
 cnt.add( ILABEL27, 0 );
 cnt.getLayout().removeLayoutComponent( ILABEL27 );
 ILABEL27.setBounds( 226, 113, 64, 19 );
 ILABEL28 = new LABEL28();
 cnt.add( ILABEL28, 0 );
 cnt.getLayout().removeLayoutComponent( ILABEL28 );
 ILABEL28.setBounds( 294, 114, 55, 18 );
 ILABEL29 = new LABEL29();
 cnt.add( ILABEL29, 0 );
 cnt.getLayout().removeLayoutComponent( ILABEL29 );
 ILABEL29.setBounds( 353, 114, 50, 18 );
 Iname_field = new name_field();
 cnt.add( Iname_field, 0 );
 cnt.getLayout().removeLayoutComponent( Iname_field );
 Iname_field.setBounds( 225, 134, 67, 22 );
 Istart_field = new start_field();
 cnt.add( Istart_field, 0 );
 cnt.getLayout().removeLayoutComponent( Istart_field );
 Istart_field.setBounds( 295, 135, 54, 21 );
 Iend_field = new end_field();
 cnt.add( Iend_field, 0 );
 cnt.getLayout().removeLayoutComponent( Iend_field );
 Iend_field.setBounds( 352, 134, 52, 22 );
 Iinterval_field = new interval_field();
 cnt.add( Iinterval_field, 0 );
 cnt.getLayout().removeLayoutComponent( Iinterval_field );
 Iinterval_field.setBounds( 116, 132, 75, 25 );
 Ibreak_field = new break_field();
 cnt.add( Ibreak_field, 0 );
 cnt.getLayout().removeLayoutComponent( Ibreak_field );
 Ibreak_field.setBounds( 115, 158, 76, 23 );
 ILABEL33 = new LABEL33();
 cnt.add( ILABEL33, 0 );
 cnt.getLayout().removeLayoutComponent( ILABEL33 );
 ILABEL33.setBounds( 115, 114, 105, 15 );
 ILABEL34 = new LABEL34();
 cnt.add( ILABEL34, 0 );
 cnt.getLayout().removeLayoutComponent( ILABEL34 );
 ILABEL34.setBounds( 194, 133, 27, 23 );
 ILABEL36 = new LABEL36();
 cnt.add( ILABEL36, 0 );
 cnt.getLayout().removeLayoutComponent( ILABEL36 );
 ILABEL36.setBounds( 2, 59, 57, 25 );
 ILABEL35 = new LABEL35();
 cnt.add( ILABEL35, 0 );
 cnt.getLayout().removeLayoutComponent( ILABEL35 );
 ILABEL35.setBounds( 206, 59, 32, 24 );
 Icompile_button = new compile_button();
 cnt.add( Icompile_button, 0 );
 cnt.getLayout().removeLayoutComponent( Icompile_button );
 Icompile_button.setBounds( 196, 3, 60, 27 );
 Iclr_button = new clr_button();
 cnt.add( Iclr_button, 0 );
 cnt.getLayout().removeLayoutComponent( Iclr_button );
 Iclr_button.setBounds( 258, 3, 33, 27 );
 Iasm_button = new asm_button();
 cnt.add( Iasm_button, 0 );
 cnt.getLayout().removeLayoutComponent( Iasm_button );
 Iasm_button.setBounds( 78, 2, 74, 28 );
 Iasm_edit_button = new asm_edit_button();
 cnt.add( Iasm_edit_button, 0 );
 cnt.getLayout().removeLayoutComponent( Iasm_edit_button );
 Iasm_edit_button.setBounds( 3, 2, 74, 28 );
 Ifast_run_button = new fast_run_button();
 cnt.add( Ifast_run_button, 0 );
 cnt.getLayout().removeLayoutComponent( Ifast_run_button );
 Ifast_run_button.setBounds( 338, 2, 68, 28 );
 ILABEL2 = new LABEL2();
 cnt.add( ILABEL2, 0 );
 cnt.getLayout().removeLayoutComponent( ILABEL2 );
 ILABEL2.setBounds( 148, 59, 55, 24 );
 ILABEL3 = new LABEL3();
 cnt.add( ILABEL3, 0 );
 cnt.getLayout().removeLayoutComponent( ILABEL3 );
 ILABEL3.setBounds( 90, 59, 55, 24 );
 ILABEL4 = new LABEL4();
 cnt.add( ILABEL4, 0 );
 cnt.getLayout().removeLayoutComponent( ILABEL4 );
 ILABEL4.setBounds( 61, 59, 27, 24 );
 Iedit_button = new edit_button();
 cnt.add( Iedit_button, 0 );
 cnt.getLayout().removeLayoutComponent( Iedit_button );
 Iedit_button.setBounds( 153, 3, 42, 27 );
 Icmd_field = new cmd_field();
 cnt.add( Icmd_field, 0 );
 cnt.getLayout().removeLayoutComponent( Icmd_field );
 Icmd_field.setBounds( 507, 3, 260, 30 );
 ILABEL42 = new LABEL42();
 cnt.add( ILABEL42, 0 );
 cnt.getLayout().removeLayoutComponent( ILABEL42 );
 ILABEL42.setBounds( 411, 2, 91, 29 );
 Idisp_area = new disp_area();
 cnt.add( Idisp_area.scrl, 0 );
 cnt.getLayout().removeLayoutComponent( Idisp_area.scrl );
 (  Idisp_area.scrl ).setBounds( 411, 36, 507, 576 );
 ILABEL50 = new LABEL50();
 cnt.add( ILABEL50, 0 );
 cnt.getLayout().removeLayoutComponent( ILABEL50 );
 ILABEL50.setBounds( 2, 158, 107, 22 );
 setContentPane( cnt );
 pack();
 addWindowListener( this );
 setVisible( true );
 GUI_created( this );
}
 public void windowActivated( WindowEvent e ){}
 public void windowClosed( WindowEvent e ){}
 public void windowClosing( WindowEvent e ){ GUI_closed(); }
 public void windowDeactivated( WindowEvent e ){}
 public void windowDeiconified( WindowEvent e ){}
 public void windowIconified( WindowEvent e ){}
 public void windowOpened( WindowEvent e ){}
}
</codetext>
</codeclip>
<ID_maker>63</ID_maker>
<height>850</height>
<レイアウト>CARD8シミュレータ
923
615
252
243
83
xxscale=1
BUTTON;single_button;1step;63;112;47;44;51;51;51;192;192;192;Dialog;12;null;0;0;1;0;1;JButton;
BUTTON;clear_list;C;317;58;21;24;51;51;51;192;192;192;Dialog;9;null;0;0;1;0;1;JButton;
BUTTON;add_list;ADD;341;59;31;23;51;51;51;192;192;192;Dialog;9;null;0;0;1;0;1;JButton;
BUTTON;del_list;DEL;374;59;31;23;51;51;51;192;192;192;Dialog;9;null;0;0;1;0;1;JButton;
BUTTON;home_list;0;317;85;22;23;51;51;51;192;192;192;Dialog;9;null;0;0;1;0;1;JButton;
BUTTON;inc_list;&gt;;375;85;30;23;51;51;51;192;192;192;Dialog;9;null;0;0;1;0;1;JButton;
BUTTON;dec_list;&lt;;343;85;29;23;51;51;51;192;192;192;Dialog;9;null;0;0;1;0;1;JButton;
BUTTON;run_button;run;292;2;44;27;51;51;51;192;192;192;Dialog;12;null;0;0;1;1;1;JButton;
BUTTON;inc_addr;+;241;59;28;23;51;51;51;192;192;192;Dialog;12;null;0;0;1;0;1;JButton;
BUTTON;dec_addr;-;241;85;28;23;51;51;51;192;192;192;Dialog;12;null;0;0;1;0;1;JButton;
BUTTON;mem_set;WRT;272;59;42;49;51;51;51;192;192;192;Dialog;12;null;0;0;1;0;1;JButton;
BUTTON;inifile_button;Select .ini File;772;3;144;29;51;51;51;192;192;192;Dialog;12;null;0;0;1;0;1;JButton;
TEXTFIELD;addr_reg;000000;2;86;57;24;51;51;51;255;255;255;Dialog;10;1;1;1;JTextField;
TEXTFIELD;c_reg;00;61;86;29;24;51;51;51;255;255;255;Dialog;10;1;1;0;JTextField;
TEXTFIELD;a_reg;000000;91;86;56;24;51;51;51;255;255;255;Dialog;10;1;1;0;JTextField;
TEXTFIELD;r_reg;000000;148;86;56;24;51;51;51;255;255;255;Dialog;10;1;1;0;JTextField;
TEXTFIELD;d_reg;00;206;85;33;25;51;51;51;255;255;255;Dialog;10;1;1;0;JTextField;
LABEL;io_flg;IO;3;33;33;22;51;51;51;192;192;192;Dialog;11;null;0;0;1;1;0;JLabel;
LABEL;pointer_flg;POINTER;42;33;67;23;51;51;51;192;192;192;Dialog;11;null;0;0;1;1;0;JLabel;
LABEL;return_flg;RET;116;34;41;22;51;51;51;192;192;192;Dialog;11;null;0;0;1;1;0;JLabel;
LABEL;store_flg;ST;164;34;37;21;51;51;51;192;192;192;Dialog;12;null;0;0;1;1;0;JLabel;
LABEL;ld_flg;LD;207;34;37;21;51;51;51;192;192;192;Dialog;11;null;0;0;1;1;0;JLabel;
LABEL;ldh_flg;LDH;249;34;46;21;51;51;51;192;192;192;Dialog;11;null;0;0;1;1;0;JLabel;
LABEL;ldm_flg;LDM;300;34;49;21;51;51;51;192;192;192;Dialog;11;null;0;0;1;1;0;JLabel;
LABEL;ldl_flg;LDL;354;34;50;21;51;51;51;192;192;192;Dialog;11;null;0;0;1;1;0;JLabel;
TEXTAREA;message_area;null;1;183;404;426;51;51;51;255;255;255;Dialog;12;1;1;1;JTextArea;
LABEL;LABEL24;CYCLE:;2;111;59;22;51;51;51;192;192;192;Dialog;12;null;2;0;1;0;0;JLabel;
TEXTFIELD;clock_field;0;3;135;56;22;51;51;51;255;255;255;Dialog;12;1;1;0;JTextField;
LABEL;LABEL27;Name;226;113;64;19;51;51;51;192;192;192;Dialog;12;null;0;0;1;0;0;JLabel;
LABEL;LABEL28;Start;294;114;55;18;51;51;51;192;192;192;Dialog;12;null;0;0;1;0;0;JLabel;
LABEL;LABEL29;End;353;114;50;18;51;51;51;192;192;192;Dialog;12;null;0;0;1;0;0;JLabel;
TEXTFIELD;name_field;null;225;134;67;22;51;51;51;255;255;255;Dialog;10;1;1;0;JTextField;
TEXTFIELD;start_field;0;295;135;54;21;51;51;51;255;255;255;Dialog;10;1;1;0;JTextField;
TEXTFIELD;end_field;0;352;134;52;22;51;51;51;255;255;255;Dialog;10;1;1;0;JTextField;
TEXTFIELD;interval_field;1;116;132;75;25;51;51;51;255;255;255;Dialog;10;1;1;0;JTextField;
TEXTFIELD;break_field;0;115;158;76;23;51;51;51;255;255;255;Dialog;10;1;1;0;JTextField;
LABEL;LABEL33;interval time;115;114;105;15;51;51;51;192;192;192;Dialog;12;null;0;0;1;0;0;JLabel;
LABEL;LABEL34;ms;194;133;27;23;51;51;51;192;192;192;Dialog;12;null;0;0;1;0;0;JLabel;
LABEL;LABEL36;ADDR:;2;59;57;25;51;51;51;192;192;192;Dialog;12;null;0;0;1;0;0;JLabel;
LABEL;LABEL35;D:;206;59;32;24;51;51;51;192;192;192;Dialog;12;null;0;0;1;0;0;JLabel;
BUTTON;compile_button;Compile;196;3;60;27;51;51;51;192;192;192;Dialog;12;null;0;0;1;0;1;JButton;
BUTTON;clr_button;CLR;258;3;33;27;51;51;51;192;192;192;Dialog;10;null;0;0;1;0;1;JButton;
BUTTON;asm_button;assemble;78;2;74;28;51;51;51;192;192;192;Dialog;12;null;0;0;1;0;1;JButton;
BUTTON;asm_edit_button;asm edit;3;2;74;28;51;51;51;192;192;192;Dialog;12;null;0;0;1;0;1;JButton;
BUTTON;fast_run_button;Fast run;338;2;68;28;51;51;51;192;192;192;Dialog;12;null;0;0;1;0;1;JButton;
LABEL;LABEL2;R:;148;59;55;24;51;51;51;192;192;192;Dialog;12;null;0;0;1;0;0;JLabel;
LABEL;LABEL3;A:;90;59;55;24;51;51;51;192;192;192;Dialog;12;null;0;0;1;0;0;JLabel;
LABEL;LABEL4;C:;61;59;27;24;51;51;51;192;192;192;Dialog;12;null;0;0;1;0;0;JLabel;
BUTTON;edit_button;edit;153;3;42;27;51;51;51;192;192;192;Dialog;12;null;0;0;1;0;1;JButton;
TEXTFIELD;cmd_field;null;507;3;260;30;51;51;51;255;255;255;Dialog;12;1;1;1;JTextField;
LABEL;LABEL42;Command:;411;2;91;29;51;51;51;192;192;192;Dialog;12;null;0;0;1;0;0;JLabel;
TEXTAREA;disp_area;null;411;36;507;576;29;255;32;1;1;1;Dialog;20;1;1;1;JTextArea;
LABEL;LABEL50;Break address;2;158;107;22;51;51;51;192;192;192;Dialog;12;null;0;0;1;0;0;JLabel;
</レイアウト>
</aobject>
</xobject>
